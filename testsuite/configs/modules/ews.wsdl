<?xml version="1.0" encoding="utf-8"?>
<wsdl:definitions name="Cerebrum2Ephorte"
targetNamespace="http://Cerebrum2Ephorte/Service"
xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/"
xmlns:wsam="http://www.w3.org/2007/05/addressing/metadata"
xmlns:wsx="http://schemas.xmlsoap.org/ws/2004/09/mex"
xmlns:wsap="http://schemas.xmlsoap.org/ws/2004/08/addressing/policy"
xmlns:msc="http://schemas.microsoft.com/ws/2005/12/wsdl/contract"
xmlns:wsp="http://schemas.xmlsoap.org/ws/2004/09/policy"
xmlns:xsd="http://www.w3.org/2001/XMLSchema"
xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/"
xmlns:wsu="http://docs.oasis-open.org/wss/2004/01/oasis-200401-wss-wssecurity-utility-1.0.xsd"
xmlns:soap12="http://schemas.xmlsoap.org/wsdl/soap12/"
xmlns:soapenc="http://schemas.xmlsoap.org/soap/encoding/"
xmlns:tns="http://Cerebrum2Ephorte/Service"
xmlns:wsa10="http://www.w3.org/2005/08/addressing"
xmlns:wsaw="http://www.w3.org/2006/05/addressing/wsdl"
xmlns:wsa="http://schemas.xmlsoap.org/ws/2004/08/addressing">
  <wsp:Policy wsu:Id="BasicHttpBinding_Cerebrum2EphorteService_policy">

    <wsp:ExactlyOne>
      <wsp:All>
        <sp:TransportBinding xmlns:sp="http://schemas.xmlsoap.org/ws/2005/07/securitypolicy">

          <wsp:Policy>
            <sp:TransportToken>
              <wsp:Policy>
                <sp:HttpsToken RequireClientCertificate="false" />
              </wsp:Policy>
            </sp:TransportToken>
            <sp:AlgorithmSuite>
              <wsp:Policy>
                <sp:Basic256 />
              </wsp:Policy>
            </sp:AlgorithmSuite>
            <sp:Layout>
              <wsp:Policy>
                <sp:Strict />
              </wsp:Policy>
            </sp:Layout>
          </wsp:Policy>
        </sp:TransportBinding>
      </wsp:All>
    </wsp:ExactlyOne>
  </wsp:Policy>
  <wsdl:types>
    <xs:schema elementFormDefault="qualified"
    targetNamespace="http://Cerebrum2Ephorte/Service"
    xmlns:xs="http://www.w3.org/2001/XMLSchema">
      <xs:import namespace="http://schemas.microsoft.com/2003/10/Serialization/Arrays" />
      <xs:element name="Test">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="username"
            nillable="true" type="xs:string" />
            <xs:element minOccurs="0" name="password"
            nillable="true" type="xs:string" />
            <xs:element minOccurs="0" name="customer"
            nillable="true" type="xs:string" />
            <xs:element minOccurs="0" name="userId" nillable="true"
            type="xs:string" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="TestResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="TestResult"
            nillable="true" type="tns:TestUser" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:complexType name="TestUser">
        <xs:complexContent mixed="false">
          <xs:extension base="tns:Response">
            <xs:sequence>
              <xs:element minOccurs="0" name="FullName"
              nillable="true" type="xs:string" />
              <xs:element minOccurs="0" name="UserId"
              nillable="true" type="xs:string" />
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:element name="TestUser" nillable="true"
      type="tns:TestUser" />
      <xs:complexType name="Response">
        <xs:sequence>
          <xs:element minOccurs="0" name="ErrorMessage"
          nillable="true" type="xs:string" />
          <xs:element minOccurs="0" name="HasError"
          type="xs:boolean" />
          <xs:element minOccurs="0" name="OccurencesFound"
          nillable="true" type="xs:int" />
        </xs:sequence>
      </xs:complexType>
      <xs:element name="Response" nillable="true"
      type="tns:Response" />
      <xs:element name="TestWithEphorte">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="username"
            nillable="true" type="xs:string" />
            <xs:element minOccurs="0" name="password"
            nillable="true" type="xs:string" />
            <xs:element minOccurs="0" name="customerId"
            nillable="true" type="xs:string" />
            <xs:element minOccurs="0" name="database"
            nillable="true" type="xs:string" />
            <xs:element minOccurs="0" name="userId" nillable="true"
            type="xs:string" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="TestWithEphorteResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="TestWithEphorteResult"
            nillable="true" type="tns:TestUser" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="GetAllOrgUnits">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="username"
            nillable="true" type="xs:string" />
            <xs:element minOccurs="0" name="password"
            nillable="true" type="xs:string" />
            <xs:element minOccurs="0" name="customerId"
            nillable="true" type="xs:string" />
            <xs:element minOccurs="0" name="database"
            nillable="true" type="xs:string" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="GetAllOrgUnitsResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="GetAllOrgUnitsResult"
            nillable="true" type="tns:EphorteOrgUnits" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:complexType name="EphorteOrgUnits">
        <xs:complexContent mixed="false">
          <xs:extension base="tns:Response">
            <xs:sequence>
              <xs:element minOccurs="0" name="OrgUnits"
              nillable="true" type="tns:ArrayOfEphorteOrg" />
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:element name="EphorteOrgUnits" nillable="true"
      type="tns:EphorteOrgUnits" />
      <xs:complexType name="ArrayOfEphorteOrg">
        <xs:sequence>
          <xs:element minOccurs="0" maxOccurs="unbounded"
          name="EphorteOrg" nillable="true"
          type="tns:EphorteOrg" />
        </xs:sequence>
      </xs:complexType>
      <xs:element name="ArrayOfEphorteOrg" nillable="true"
      type="tns:ArrayOfEphorteOrg" />
      <xs:complexType name="EphorteOrg">
        <xs:sequence>
          <xs:element minOccurs="0" name="IsTop"
          type="xs:boolean" />
          <xs:element minOccurs="0" name="Name" nillable="true"
          type="xs:string" />
          <xs:element minOccurs="0" name="OrgId" nillable="true"
          type="xs:string" />
          <xs:element minOccurs="0" name="ParentOrgId"
          nillable="true" type="xs:string" />
        </xs:sequence>
      </xs:complexType>
      <xs:element name="EphorteOrg" nillable="true"
      type="tns:EphorteOrg" />
      <xs:element name="GetAllRoles">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="username"
            nillable="true" type="xs:string" />
            <xs:element minOccurs="0" name="password"
            nillable="true" type="xs:string" />
            <xs:element minOccurs="0" name="customerId"
            nillable="true" type="xs:string" />
            <xs:element minOccurs="0" name="database"
            nillable="true" type="xs:string" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="GetAllRolesResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="GetAllRolesResult"
            nillable="true" type="tns:EphorteRoles" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:complexType name="EphorteRoles">
        <xs:complexContent mixed="false">
          <xs:extension base="tns:Response">
            <xs:sequence>
              <xs:element minOccurs="0" name="Roles"
              nillable="true" type="tns:ArrayOfEphorteRole" />
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:element name="EphorteRoles" nillable="true"
      type="tns:EphorteRoles" />
      <xs:complexType name="ArrayOfEphorteRole">
        <xs:sequence>
          <xs:element minOccurs="0" maxOccurs="unbounded"
          name="EphorteRole" nillable="true"
          type="tns:EphorteRole" />
        </xs:sequence>
      </xs:complexType>
      <xs:element name="ArrayOfEphorteRole" nillable="true"
      type="tns:ArrayOfEphorteRole" />
      <xs:complexType name="EphorteRole">
        <xs:sequence>
          <xs:element minOccurs="0" name="Description"
          nillable="true" type="xs:string" />
          <xs:element minOccurs="0" name="RoleId" nillable="true"
          type="xs:string" />
        </xs:sequence>
      </xs:complexType>
      <xs:element name="EphorteRole" nillable="true"
      type="tns:EphorteRole" />
      <xs:element name="GetAllAccessCodes">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="username"
            nillable="true" type="xs:string" />
            <xs:element minOccurs="0" name="password"
            nillable="true" type="xs:string" />
            <xs:element minOccurs="0" name="customerId"
            nillable="true" type="xs:string" />
            <xs:element minOccurs="0" name="database"
            nillable="true" type="xs:string" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="GetAllAccessCodesResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0"
            name="GetAllAccessCodesResult" nillable="true"
            type="tns:EphorteAccessCodes" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:complexType name="EphorteAccessCodes">
        <xs:complexContent mixed="false">
          <xs:extension base="tns:Response">
            <xs:sequence>
              <xs:element minOccurs="0" name="AccessCodes"
              nillable="true"
              type="tns:ArrayOfEphorteAccessCode" />
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:element name="EphorteAccessCodes" nillable="true"
      type="tns:EphorteAccessCodes" />
      <xs:complexType name="ArrayOfEphorteAccessCode">
        <xs:sequence>
          <xs:element minOccurs="0" maxOccurs="unbounded"
          name="EphorteAccessCode" nillable="true"
          type="tns:EphorteAccessCode" />
        </xs:sequence>
      </xs:complexType>
      <xs:element name="ArrayOfEphorteAccessCode" nillable="true"
      type="tns:ArrayOfEphorteAccessCode" />
      <xs:complexType name="EphorteAccessCode">
        <xs:sequence>
          <xs:element minOccurs="0" name="AccessCodeId"
          nillable="true" type="xs:string" />
          <xs:element minOccurs="0" name="Description"
          nillable="true" type="xs:string" />
        </xs:sequence>
      </xs:complexType>
      <xs:element name="EphorteAccessCode" nillable="true"
      type="tns:EphorteAccessCode" />
      <xs:element name="GetAllUsers">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="username"
            nillable="true" type="xs:string" />
            <xs:element minOccurs="0" name="password"
            nillable="true" type="xs:string" />
            <xs:element minOccurs="0" name="customerId"
            nillable="true" type="xs:string" />
            <xs:element minOccurs="0" name="database"
            nillable="true" type="xs:string" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="GetAllUsersResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="GetAllUsersResult"
            nillable="true" type="tns:EphorteUsers" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:complexType name="EphorteUsers">
        <xs:complexContent mixed="false">
          <xs:extension base="tns:Response">
            <xs:sequence>
              <xs:element minOccurs="0" name="Users"
              nillable="true" type="tns:ArrayOfEphorteUser" />
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:element name="EphorteUsers" nillable="true"
      type="tns:EphorteUsers" />
      <xs:complexType name="ArrayOfEphorteUser">
        <xs:sequence>
          <xs:element minOccurs="0" maxOccurs="unbounded"
          name="EphorteUser" nillable="true"
          type="tns:EphorteUser" />
        </xs:sequence>
      </xs:complexType>
      <xs:element name="ArrayOfEphorteUser" nillable="true"
      type="tns:ArrayOfEphorteUser" />
      <xs:complexType name="EphorteUser">
        <xs:sequence>
          <xs:element minOccurs="0" name="City" nillable="true"
          type="xs:string" />
          <xs:element minOccurs="0" name="EmailAddress"
          nillable="true" type="xs:string" />
          <xs:element minOccurs="0" name="FirstName"
          nillable="true" type="xs:string" />
          <xs:element minOccurs="0" name="FullName" nillable="true"
          type="xs:string" />
          <xs:element minOccurs="0" name="Initials" nillable="true"
          type="xs:string" />
          <xs:element minOccurs="0" name="LastName" nillable="true"
          type="xs:string" />
          <xs:element minOccurs="0" name="MiddelName"
          nillable="true" type="xs:string" />
          <xs:element minOccurs="0" name="Mobile" nillable="true"
          type="xs:string" />
          <xs:element minOccurs="0" name="StreetAddress"
          nillable="true" type="xs:string" />
          <xs:element minOccurs="0" name="Telephone"
          nillable="true" type="xs:string" />
          <xs:element minOccurs="0" name="UserId" nillable="true"
          type="xs:string" />
          <xs:element minOccurs="0" name="ZipCode" nillable="true"
          type="xs:string" />
        </xs:sequence>
      </xs:complexType>
      <xs:element name="EphorteUser" nillable="true"
      type="tns:EphorteUser" />
      <xs:element name="GetUserList">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="username"
            nillable="true" type="xs:string" />
            <xs:element minOccurs="0" name="password"
            nillable="true" type="xs:string" />
            <xs:element minOccurs="0" name="customerId"
            nillable="true" type="xs:string" />
            <xs:element minOccurs="0" name="database"
            nillable="true" type="xs:string" />
            <xs:element minOccurs="0" name="userSearch"
            nillable="true" type="xs:string" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="GetUserListResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="GetUserListResult"
            nillable="true" type="tns:EphorteUsers" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="GetUserDetails">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="username"
            nillable="true" type="xs:string" />
            <xs:element minOccurs="0" name="password"
            nillable="true" type="xs:string" />
            <xs:element minOccurs="0" name="customerId"
            nillable="true" type="xs:string" />
            <xs:element minOccurs="0" name="database"
            nillable="true" type="xs:string" />
            <xs:element minOccurs="0" name="userId" nillable="true"
            type="xs:string" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="GetUserDetailsResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="GetUserDetailsResult"
            nillable="true" type="tns:EphorteUserDetails" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:complexType name="EphorteUserDetails">
        <xs:complexContent mixed="false">
          <xs:extension base="tns:Response">
            <xs:sequence>
              <xs:element minOccurs="0" name="User" nillable="true"
              type="tns:EphorteUser" />
              <xs:element minOccurs="0" name="UserAuthorizations"
              nillable="true"
              type="tns:ArrayOfEphorteUserAuthorization" />
              <xs:element minOccurs="0" name="UserRoles"
              nillable="true" type="tns:ArrayOfEphorteUserRole" />
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:element name="EphorteUserDetails" nillable="true"
      type="tns:EphorteUserDetails" />
      <xs:complexType name="ArrayOfEphorteUserAuthorization">
        <xs:sequence>
          <xs:element minOccurs="0" maxOccurs="unbounded"
          name="EphorteUserAuthorization" nillable="true"
          type="tns:EphorteUserAuthorization" />
        </xs:sequence>
      </xs:complexType>
      <xs:element name="ArrayOfEphorteUserAuthorization"
      nillable="true" type="tns:ArrayOfEphorteUserAuthorization" />
      <xs:complexType name="EphorteUserAuthorization">
        <xs:sequence>
          <xs:element minOccurs="0" name="AccessCodeId"
          nillable="true" type="xs:string" />
          <xs:element minOccurs="0"
          name="IsAutorizedForAllOrgUnits" type="xs:boolean" />
          <xs:element minOccurs="0" name="OrgId" nillable="true"
          type="xs:string" />
        </xs:sequence>
      </xs:complexType>
      <xs:element name="EphorteUserAuthorization" nillable="true"
      type="tns:EphorteUserAuthorization" />
      <xs:complexType name="ArrayOfEphorteUserRole">
        <xs:sequence>
          <xs:element minOccurs="0" maxOccurs="unbounded"
          name="EphorteUserRole" nillable="true"
          type="tns:EphorteUserRole" />
        </xs:sequence>
      </xs:complexType>
      <xs:element name="ArrayOfEphorteUserRole" nillable="true"
      type="tns:ArrayOfEphorteUserRole" />
      <xs:complexType name="EphorteUserRole">
        <xs:sequence>
          <xs:element minOccurs="0" name="FondsSeriesId"
          nillable="true" type="xs:string" />
          <xs:element minOccurs="0" name="IsDefault"
          type="xs:boolean" />
          <xs:element minOccurs="0" name="JobTitle" nillable="true"
          type="xs:string" />
          <xs:element minOccurs="0" name="Org" nillable="true"
          type="tns:EphorteOrg" />
          <xs:element minOccurs="0" name="RegistryManagementUnitId"
          nillable="true" type="xs:string" />
          <xs:element minOccurs="0" name="Role" nillable="true"
          type="tns:EphorteRole" />
          <xs:element minOccurs="0" name="RoleTitle"
          nillable="true" type="xs:string" />
        </xs:sequence>
      </xs:complexType>
      <xs:element name="EphorteUserRole" nillable="true"
      type="tns:EphorteUserRole" />
      <xs:element name="EnsureUser">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="username"
            nillable="true" type="xs:string" />
            <xs:element minOccurs="0" name="password"
            nillable="true" type="xs:string" />
            <xs:element minOccurs="0" name="customerId"
            nillable="true" type="xs:string" />
            <xs:element minOccurs="0" name="database"
            nillable="true" type="xs:string" />
            <xs:element minOccurs="0" name="user" nillable="true"
            type="tns:EphorteUser" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="EnsureUserResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="EnsureUserResult"
            nillable="true" type="tns:Response" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="DisableUser">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="username"
            nillable="true" type="xs:string" />
            <xs:element minOccurs="0" name="password"
            nillable="true" type="xs:string" />
            <xs:element minOccurs="0" name="customerId"
            nillable="true" type="xs:string" />
            <xs:element minOccurs="0" name="database"
            nillable="true" type="xs:string" />
            <xs:element minOccurs="0" name="userId" nillable="true"
            type="xs:string" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="DisableUserResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="DisableUserResult"
            nillable="true" type="tns:Response" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="EnsureRoleForUser">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="username"
            nillable="true" type="xs:string" />
            <xs:element minOccurs="0" name="password"
            nillable="true" type="xs:string" />
            <xs:element minOccurs="0" name="customerId"
            nillable="true" type="xs:string" />
            <xs:element minOccurs="0" name="database"
            nillable="true" type="xs:string" />
            <xs:element minOccurs="0" name="userId" nillable="true"
            type="xs:string" />
            <xs:element minOccurs="0" name="jobTitle"
            nillable="true" type="xs:string" />
            <xs:element minOccurs="0" name="roleId" nillable="true"
            type="xs:string" />
            <xs:element minOccurs="0" name="orgId" nillable="true"
            type="xs:string" />
            <xs:element minOccurs="0" name="fondsSeriesId"
            nillable="true" type="xs:string" />
            <xs:element minOccurs="0"
            name="registryManagementUnitId" nillable="true"
            type="xs:string" />
            <xs:element minOccurs="0" name="setAsDefaultRole"
            nillable="true" type="xs:boolean" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="EnsureRoleForUserResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0"
            name="EnsureRoleForUserResult" nillable="true"
            type="tns:Response" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="EnsureAccessCodeAuthorizationForUser">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="username"
            nillable="true" type="xs:string" />
            <xs:element minOccurs="0" name="password"
            nillable="true" type="xs:string" />
            <xs:element minOccurs="0" name="customerId"
            nillable="true" type="xs:string" />
            <xs:element minOccurs="0" name="database"
            nillable="true" type="xs:string" />
            <xs:element minOccurs="0" name="userId" nillable="true"
            type="xs:string" />
            <xs:element minOccurs="0" name="accessCodeId"
            nillable="true" type="xs:string" />
            <xs:element minOccurs="0" name="orgId" nillable="true"
            type="xs:string" />
            <xs:element minOccurs="0"
            name="isAuthorizedForAllUnits" type="xs:boolean" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="EnsureAccessCodeAuthorizationForUserResponse">

        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0"
            name="EnsureAccessCodeAuthorizationForUserResult"
            nillable="true" type="tns:Response" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="GetUserBacklog">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="username"
            nillable="true" type="xs:string" />
            <xs:element minOccurs="0" name="password"
            nillable="true" type="xs:string" />
            <xs:element minOccurs="0" name="customerId"
            nillable="true" type="xs:string" />
            <xs:element minOccurs="0" name="database"
            nillable="true" type="xs:string" />
            <xs:element minOccurs="0" name="userId" nillable="true"
            type="xs:string" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="GetUserBacklogResponse">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="GetUserBacklogResult"
            nillable="true" type="tns:EphorteUserBacklog" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:complexType name="EphorteUserBacklog">
        <xs:complexContent mixed="false">
          <xs:extension base="tns:Response">
            <xs:sequence>
              <xs:element minOccurs="0" name="BacklogMessage"
              nillable="true" type="q1:ArrayOfstring"
              xmlns:q1="http://schemas.microsoft.com/2003/10/Serialization/Arrays" />
              <xs:element minOccurs="0" name="HasBacklog"
              type="xs:boolean" />
              <xs:element minOccurs="0" name="LeaderEmail"
              nillable="true" type="xs:string" />
              <xs:element minOccurs="0" name="UserEmail"
              nillable="true" type="xs:string" />
            </xs:sequence>
          </xs:extension>
        </xs:complexContent>
      </xs:complexType>
      <xs:element name="EphorteUserBacklog" nillable="true"
      type="tns:EphorteUserBacklog" />
      <xs:element name="DisableRolesAndAuthorizationsForUser">
        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0" name="username"
            nillable="true" type="xs:string" />
            <xs:element minOccurs="0" name="password"
            nillable="true" type="xs:string" />
            <xs:element minOccurs="0" name="customerId"
            nillable="true" type="xs:string" />
            <xs:element minOccurs="0" name="database"
            nillable="true" type="xs:string" />
            <xs:element minOccurs="0" name="userId" nillable="true"
            type="xs:string" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="DisableRolesAndAuthorizationsForUserResponse">

        <xs:complexType>
          <xs:sequence>
            <xs:element minOccurs="0"
            name="DisableRolesAndAuthorizationsForUserResult"
            nillable="true" type="tns:Response" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
    </xs:schema>
    <xs:schema attributeFormDefault="qualified"
    elementFormDefault="qualified"
    targetNamespace="http://schemas.microsoft.com/2003/10/Serialization/"
    xmlns:xs="http://www.w3.org/2001/XMLSchema"
    xmlns:tns="http://schemas.microsoft.com/2003/10/Serialization/">

      <xs:element name="anyType" nillable="true"
      type="xs:anyType" />
      <xs:element name="anyURI" nillable="true" type="xs:anyURI" />
      <xs:element name="base64Binary" nillable="true"
      type="xs:base64Binary" />
      <xs:element name="boolean" nillable="true"
      type="xs:boolean" />
      <xs:element name="byte" nillable="true" type="xs:byte" />
      <xs:element name="dateTime" nillable="true"
      type="xs:dateTime" />
      <xs:element name="decimal" nillable="true"
      type="xs:decimal" />
      <xs:element name="double" nillable="true" type="xs:double" />
      <xs:element name="float" nillable="true" type="xs:float" />
      <xs:element name="int" nillable="true" type="xs:int" />
      <xs:element name="long" nillable="true" type="xs:long" />
      <xs:element name="QName" nillable="true" type="xs:QName" />
      <xs:element name="short" nillable="true" type="xs:short" />
      <xs:element name="string" nillable="true" type="xs:string" />
      <xs:element name="unsignedByte" nillable="true"
      type="xs:unsignedByte" />
      <xs:element name="unsignedInt" nillable="true"
      type="xs:unsignedInt" />
      <xs:element name="unsignedLong" nillable="true"
      type="xs:unsignedLong" />
      <xs:element name="unsignedShort" nillable="true"
      type="xs:unsignedShort" />
      <xs:element name="char" nillable="true" type="tns:char" />
      <xs:simpleType name="char">
        <xs:restriction base="xs:int" />
      </xs:simpleType>
      <xs:element name="duration" nillable="true"
      type="tns:duration" />
      <xs:simpleType name="duration">
        <xs:restriction base="xs:duration">
          <xs:pattern value="\-?P(\d*D)?(T(\d*H)?(\d*M)?(\d*(\.\d*)?S)?)?" />
          <xs:minInclusive value="-P10675199DT2H48M5.4775808S" />
          <xs:maxInclusive value="P10675199DT2H48M5.4775807S" />
        </xs:restriction>
      </xs:simpleType>
      <xs:element name="guid" nillable="true" type="tns:guid" />
      <xs:simpleType name="guid">
        <xs:restriction base="xs:string">
          <xs:pattern value="[\da-fA-F]{8}-[\da-fA-F]{4}-[\da-fA-F]{4}-[\da-fA-F]{4}-[\da-fA-F]{12}" />
        </xs:restriction>
      </xs:simpleType>
      <xs:attribute name="FactoryType" type="xs:QName" />
      <xs:attribute name="Id" type="xs:ID" />
      <xs:attribute name="Ref" type="xs:IDREF" />
    </xs:schema>
    <xs:schema elementFormDefault="qualified"
    targetNamespace="http://schemas.microsoft.com/2003/10/Serialization/Arrays"
    xmlns:xs="http://www.w3.org/2001/XMLSchema"
    xmlns:tns="http://schemas.microsoft.com/2003/10/Serialization/Arrays">

      <xs:complexType name="ArrayOfstring">
        <xs:sequence>
          <xs:element minOccurs="0" maxOccurs="unbounded"
          name="string" nillable="true" type="xs:string" />
        </xs:sequence>
      </xs:complexType>
      <xs:element name="ArrayOfstring" nillable="true"
      type="tns:ArrayOfstring" />
    </xs:schema>
  </wsdl:types>
  <wsdl:message name="Cerebrum2EphorteService_Test_InputMessage">
    <wsdl:part name="parameters" element="tns:Test" />
  </wsdl:message>
  <wsdl:message name="Cerebrum2EphorteService_Test_OutputMessage">
    <wsdl:part name="parameters" element="tns:TestResponse" />
  </wsdl:message>
  <wsdl:message name="Cerebrum2EphorteService_TestWithEphorte_InputMessage">

    <wsdl:part name="parameters" element="tns:TestWithEphorte" />
  </wsdl:message>
  <wsdl:message name="Cerebrum2EphorteService_TestWithEphorte_OutputMessage">

    <wsdl:part name="parameters"
    element="tns:TestWithEphorteResponse" />
  </wsdl:message>
  <wsdl:message name="Cerebrum2EphorteService_GetAllOrgUnits_InputMessage">

    <wsdl:part name="parameters" element="tns:GetAllOrgUnits" />
  </wsdl:message>
  <wsdl:message name="Cerebrum2EphorteService_GetAllOrgUnits_OutputMessage">

    <wsdl:part name="parameters"
    element="tns:GetAllOrgUnitsResponse" />
  </wsdl:message>
  <wsdl:message name="Cerebrum2EphorteService_GetAllRoles_InputMessage">

    <wsdl:part name="parameters" element="tns:GetAllRoles" />
  </wsdl:message>
  <wsdl:message name="Cerebrum2EphorteService_GetAllRoles_OutputMessage">

    <wsdl:part name="parameters"
    element="tns:GetAllRolesResponse" />
  </wsdl:message>
  <wsdl:message name="Cerebrum2EphorteService_GetAllAccessCodes_InputMessage">

    <wsdl:part name="parameters" element="tns:GetAllAccessCodes" />
  </wsdl:message>
  <wsdl:message name="Cerebrum2EphorteService_GetAllAccessCodes_OutputMessage">

    <wsdl:part name="parameters"
    element="tns:GetAllAccessCodesResponse" />
  </wsdl:message>
  <wsdl:message name="Cerebrum2EphorteService_GetAllUsers_InputMessage">

    <wsdl:part name="parameters" element="tns:GetAllUsers" />
  </wsdl:message>
  <wsdl:message name="Cerebrum2EphorteService_GetAllUsers_OutputMessage">

    <wsdl:part name="parameters"
    element="tns:GetAllUsersResponse" />
  </wsdl:message>
  <wsdl:message name="Cerebrum2EphorteService_GetUserList_InputMessage">

    <wsdl:part name="parameters" element="tns:GetUserList" />
  </wsdl:message>
  <wsdl:message name="Cerebrum2EphorteService_GetUserList_OutputMessage">

    <wsdl:part name="parameters"
    element="tns:GetUserListResponse" />
  </wsdl:message>
  <wsdl:message name="Cerebrum2EphorteService_GetUserDetails_InputMessage">

    <wsdl:part name="parameters" element="tns:GetUserDetails" />
  </wsdl:message>
  <wsdl:message name="Cerebrum2EphorteService_GetUserDetails_OutputMessage">

    <wsdl:part name="parameters"
    element="tns:GetUserDetailsResponse" />
  </wsdl:message>
  <wsdl:message name="Cerebrum2EphorteService_EnsureUser_InputMessage">

    <wsdl:part name="parameters" element="tns:EnsureUser" />
  </wsdl:message>
  <wsdl:message name="Cerebrum2EphorteService_EnsureUser_OutputMessage">

    <wsdl:part name="parameters"
    element="tns:EnsureUserResponse" />
  </wsdl:message>
  <wsdl:message name="Cerebrum2EphorteService_DisableUser_InputMessage">

    <wsdl:part name="parameters" element="tns:DisableUser" />
  </wsdl:message>
  <wsdl:message name="Cerebrum2EphorteService_DisableUser_OutputMessage">

    <wsdl:part name="parameters"
    element="tns:DisableUserResponse" />
  </wsdl:message>
  <wsdl:message name="Cerebrum2EphorteService_EnsureRoleForUser_InputMessage">

    <wsdl:part name="parameters" element="tns:EnsureRoleForUser" />
  </wsdl:message>
  <wsdl:message name="Cerebrum2EphorteService_EnsureRoleForUser_OutputMessage">

    <wsdl:part name="parameters"
    element="tns:EnsureRoleForUserResponse" />
  </wsdl:message>
  <wsdl:message name="Cerebrum2EphorteService_EnsureAccessCodeAuthorizationForUser_InputMessage">

    <wsdl:part name="parameters"
    element="tns:EnsureAccessCodeAuthorizationForUser" />
  </wsdl:message>
  <wsdl:message name="Cerebrum2EphorteService_EnsureAccessCodeAuthorizationForUser_OutputMessage">

    <wsdl:part name="parameters"
    element="tns:EnsureAccessCodeAuthorizationForUserResponse" />
  </wsdl:message>
  <wsdl:message name="Cerebrum2EphorteService_GetUserBacklog_InputMessage">

    <wsdl:part name="parameters" element="tns:GetUserBacklog" />
  </wsdl:message>
  <wsdl:message name="Cerebrum2EphorteService_GetUserBacklog_OutputMessage">

    <wsdl:part name="parameters"
    element="tns:GetUserBacklogResponse" />
  </wsdl:message>
  <wsdl:message name="Cerebrum2EphorteService_DisableRolesAndAuthorizationsForUser_InputMessage">

    <wsdl:part name="parameters"
    element="tns:DisableRolesAndAuthorizationsForUser" />
  </wsdl:message>
  <wsdl:message name="Cerebrum2EphorteService_DisableRolesAndAuthorizationsForUser_OutputMessage">

    <wsdl:part name="parameters"
    element="tns:DisableRolesAndAuthorizationsForUserResponse" />
  </wsdl:message>
  <wsdl:portType name="Cerebrum2EphorteService">
    <wsdl:operation name="Test">
      <wsdl:input wsaw:Action="http://Cerebrum2Ephorte/Service/Cerebrum2EphorteService/Test"
      message="tns:Cerebrum2EphorteService_Test_InputMessage" />
      <wsdl:output wsaw:Action="http://Cerebrum2Ephorte/Service/Cerebrum2EphorteService/TestResponse"
      message="tns:Cerebrum2EphorteService_Test_OutputMessage" />
    </wsdl:operation>
    <wsdl:operation name="TestWithEphorte">
      <wsdl:input wsaw:Action="http://Cerebrum2Ephorte/Service/Cerebrum2EphorteService/TestWithEphorte"
      message="tns:Cerebrum2EphorteService_TestWithEphorte_InputMessage" />
      <wsdl:output wsaw:Action="http://Cerebrum2Ephorte/Service/Cerebrum2EphorteService/TestWithEphorteResponse"
      message="tns:Cerebrum2EphorteService_TestWithEphorte_OutputMessage" />
    </wsdl:operation>
    <wsdl:operation name="GetAllOrgUnits">
      <wsdl:input wsaw:Action="http://Cerebrum2Ephorte/Service/Cerebrum2EphorteService/GetAllOrgUnits"
      message="tns:Cerebrum2EphorteService_GetAllOrgUnits_InputMessage" />
      <wsdl:output wsaw:Action="http://Cerebrum2Ephorte/Service/Cerebrum2EphorteService/GetAllOrgUnitsResponse"
      message="tns:Cerebrum2EphorteService_GetAllOrgUnits_OutputMessage" />
    </wsdl:operation>
    <wsdl:operation name="GetAllRoles">
      <wsdl:input wsaw:Action="http://Cerebrum2Ephorte/Service/Cerebrum2EphorteService/GetAllRoles"
      message="tns:Cerebrum2EphorteService_GetAllRoles_InputMessage" />
      <wsdl:output wsaw:Action="http://Cerebrum2Ephorte/Service/Cerebrum2EphorteService/GetAllRolesResponse"
      message="tns:Cerebrum2EphorteService_GetAllRoles_OutputMessage" />
    </wsdl:operation>
    <wsdl:operation name="GetAllAccessCodes">
      <wsdl:input wsaw:Action="http://Cerebrum2Ephorte/Service/Cerebrum2EphorteService/GetAllAccessCodes"
      message="tns:Cerebrum2EphorteService_GetAllAccessCodes_InputMessage" />
      <wsdl:output wsaw:Action="http://Cerebrum2Ephorte/Service/Cerebrum2EphorteService/GetAllAccessCodesResponse"
      message="tns:Cerebrum2EphorteService_GetAllAccessCodes_OutputMessage" />
    </wsdl:operation>
    <wsdl:operation name="GetAllUsers">
      <wsdl:input wsaw:Action="http://Cerebrum2Ephorte/Service/Cerebrum2EphorteService/GetAllUsers"
      message="tns:Cerebrum2EphorteService_GetAllUsers_InputMessage" />
      <wsdl:output wsaw:Action="http://Cerebrum2Ephorte/Service/Cerebrum2EphorteService/GetAllUsersResponse"
      message="tns:Cerebrum2EphorteService_GetAllUsers_OutputMessage" />
    </wsdl:operation>
    <wsdl:operation name="GetUserList">
      <wsdl:input wsaw:Action="http://Cerebrum2Ephorte/Service/Cerebrum2EphorteService/GetUserList"
      message="tns:Cerebrum2EphorteService_GetUserList_InputMessage" />
      <wsdl:output wsaw:Action="http://Cerebrum2Ephorte/Service/Cerebrum2EphorteService/GetUserListResponse"
      message="tns:Cerebrum2EphorteService_GetUserList_OutputMessage" />
    </wsdl:operation>
    <wsdl:operation name="GetUserDetails">
      <wsdl:input wsaw:Action="http://Cerebrum2Ephorte/Service/Cerebrum2EphorteService/GetUserDetails"
      message="tns:Cerebrum2EphorteService_GetUserDetails_InputMessage" />
      <wsdl:output wsaw:Action="http://Cerebrum2Ephorte/Service/Cerebrum2EphorteService/GetUserDetailsResponse"
      message="tns:Cerebrum2EphorteService_GetUserDetails_OutputMessage" />
    </wsdl:operation>
    <wsdl:operation name="EnsureUser">
      <wsdl:input wsaw:Action="http://Cerebrum2Ephorte/Service/Cerebrum2EphorteService/EnsureUser"
      message="tns:Cerebrum2EphorteService_EnsureUser_InputMessage" />
      <wsdl:output wsaw:Action="http://Cerebrum2Ephorte/Service/Cerebrum2EphorteService/EnsureUserResponse"
      message="tns:Cerebrum2EphorteService_EnsureUser_OutputMessage" />
    </wsdl:operation>
    <wsdl:operation name="DisableUser">
      <wsdl:input wsaw:Action="http://Cerebrum2Ephorte/Service/Cerebrum2EphorteService/DisableUser"
      message="tns:Cerebrum2EphorteService_DisableUser_InputMessage" />
      <wsdl:output wsaw:Action="http://Cerebrum2Ephorte/Service/Cerebrum2EphorteService/DisableUserResponse"
      message="tns:Cerebrum2EphorteService_DisableUser_OutputMessage" />
    </wsdl:operation>
    <wsdl:operation name="EnsureRoleForUser">
      <wsdl:input wsaw:Action="http://Cerebrum2Ephorte/Service/Cerebrum2EphorteService/EnsureRoleForUser"
      message="tns:Cerebrum2EphorteService_EnsureRoleForUser_InputMessage" />
      <wsdl:output wsaw:Action="http://Cerebrum2Ephorte/Service/Cerebrum2EphorteService/EnsureRoleForUserResponse"
      message="tns:Cerebrum2EphorteService_EnsureRoleForUser_OutputMessage" />
    </wsdl:operation>
    <wsdl:operation name="EnsureAccessCodeAuthorizationForUser">
      <wsdl:input wsaw:Action="http://Cerebrum2Ephorte/Service/Cerebrum2EphorteService/EnsureAccessCodeAuthorizationForUser"
      message="tns:Cerebrum2EphorteService_EnsureAccessCodeAuthorizationForUser_InputMessage" />
      <wsdl:output wsaw:Action="http://Cerebrum2Ephorte/Service/Cerebrum2EphorteService/EnsureAccessCodeAuthorizationForUserResponse"
      message="tns:Cerebrum2EphorteService_EnsureAccessCodeAuthorizationForUser_OutputMessage" />
    </wsdl:operation>
    <wsdl:operation name="GetUserBacklog">
      <wsdl:input wsaw:Action="http://Cerebrum2Ephorte/Service/Cerebrum2EphorteService/GetUserBacklog"
      message="tns:Cerebrum2EphorteService_GetUserBacklog_InputMessage" />
      <wsdl:output wsaw:Action="http://Cerebrum2Ephorte/Service/Cerebrum2EphorteService/GetUserBacklogResponse"
      message="tns:Cerebrum2EphorteService_GetUserBacklog_OutputMessage" />
    </wsdl:operation>
    <wsdl:operation name="DisableRolesAndAuthorizationsForUser">
      <wsdl:input wsaw:Action="http://Cerebrum2Ephorte/Service/Cerebrum2EphorteService/DisableRolesAndAuthorizationsForUser"
      message="tns:Cerebrum2EphorteService_DisableRolesAndAuthorizationsForUser_InputMessage" />
      <wsdl:output wsaw:Action="http://Cerebrum2Ephorte/Service/Cerebrum2EphorteService/DisableRolesAndAuthorizationsForUserResponse"
      message="tns:Cerebrum2EphorteService_DisableRolesAndAuthorizationsForUser_OutputMessage" />
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="BasicHttpBinding_Cerebrum2EphorteService"
  type="tns:Cerebrum2EphorteService">
    <wsp:PolicyReference URI="#BasicHttpBinding_Cerebrum2EphorteService_policy" />
    <soap:binding transport="http://schemas.xmlsoap.org/soap/http" />
    <wsdl:operation name="Test">
      <soap:operation soapAction="http://Cerebrum2Ephorte/Service/Cerebrum2EphorteService/Test"
      style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="TestWithEphorte">
      <soap:operation soapAction="http://Cerebrum2Ephorte/Service/Cerebrum2EphorteService/TestWithEphorte"
      style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetAllOrgUnits">
      <soap:operation soapAction="http://Cerebrum2Ephorte/Service/Cerebrum2EphorteService/GetAllOrgUnits"
      style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetAllRoles">
      <soap:operation soapAction="http://Cerebrum2Ephorte/Service/Cerebrum2EphorteService/GetAllRoles"
      style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetAllAccessCodes">
      <soap:operation soapAction="http://Cerebrum2Ephorte/Service/Cerebrum2EphorteService/GetAllAccessCodes"
      style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetAllUsers">
      <soap:operation soapAction="http://Cerebrum2Ephorte/Service/Cerebrum2EphorteService/GetAllUsers"
      style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetUserList">
      <soap:operation soapAction="http://Cerebrum2Ephorte/Service/Cerebrum2EphorteService/GetUserList"
      style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetUserDetails">
      <soap:operation soapAction="http://Cerebrum2Ephorte/Service/Cerebrum2EphorteService/GetUserDetails"
      style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="EnsureUser">
      <soap:operation soapAction="http://Cerebrum2Ephorte/Service/Cerebrum2EphorteService/EnsureUser"
      style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="DisableUser">
      <soap:operation soapAction="http://Cerebrum2Ephorte/Service/Cerebrum2EphorteService/DisableUser"
      style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="EnsureRoleForUser">
      <soap:operation soapAction="http://Cerebrum2Ephorte/Service/Cerebrum2EphorteService/EnsureRoleForUser"
      style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="EnsureAccessCodeAuthorizationForUser">
      <soap:operation soapAction="http://Cerebrum2Ephorte/Service/Cerebrum2EphorteService/EnsureAccessCodeAuthorizationForUser"
      style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="GetUserBacklog">
      <soap:operation soapAction="http://Cerebrum2Ephorte/Service/Cerebrum2EphorteService/GetUserBacklog"
      style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
    <wsdl:operation name="DisableRolesAndAuthorizationsForUser">
      <soap:operation soapAction="http://Cerebrum2Ephorte/Service/Cerebrum2EphorteService/DisableRolesAndAuthorizationsForUser"
      style="document" />
      <wsdl:input>
        <soap:body use="literal" />
      </wsdl:input>
      <wsdl:output>
        <soap:body use="literal" />
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="Cerebrum2Ephorte">
    <wsdl:port name="BasicHttpBinding_Cerebrum2EphorteService"
    binding="tns:BasicHttpBinding_Cerebrum2EphorteService">
      <soap:address location="https://localhost/Cerebrum2Ephorte/Service.svc" />
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>
