## Copyright 2004 University of Oslo, Norway
##
## This file is part of Cerebrum.
##
## Cerebrum is free software; you can redistribute it and/or modify it
## under the terms of the GNU General Public License as published by
## the Free Software Foundation; either version 2 of the License, or
## (at your option) any later version.
##
## Cerebrum is distributed in the hope that it will be useful, but
## WITHOUT ANY WARRANTY; without even the implied warranty of
## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
## General Public License for more details.
##
## You should have received a copy of the GNU General Public License
## along with Cerebrum; if not, write to the Free Software Foundation,
## Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307, USA.

#extends EntityViewTemplate
#from Cereweb.TableView import TableView
#from Cereweb.utils import url
#from MemberTableTemplate import MemberTableTemplate


#def viewGroup($req, $group)
    $groupInfo($group)
    $groupMembers($group)
    $add_member($group)
    $view_entity($group, $req)
#end def


#def groupMembers(group)
    #set $allmembers = $group.get_members()
    #if $allmembers
    <div class="members">
        <h2>$_("Members")</h2>
<%
memberSets = {}
for member in allmembers:
    operation = member.get_operation().get_name()
    # fetch (and possibly create) a list to contain members
    members = memberSets.setdefault(operation, [])
    members.append(member)
    
## FIXME Dont hardcode operations
for operation in ('union', 'intersection', 'difference'):
    members = memberSets.get(operation)
    if not members:
        # skip empty members
        continue
    write(self.memberList(operation, members, group))
%>
    </div>
#end def


#def memberList($operation, $members, $group)
#set $operations = {'union': $_('Union'), 'intersection': $_('Intersection'), 'difference': $_('Difference')}
#set $headers = {'type': $_("Type"), 'name': $_("Name")}
<div class="memberlist">
<h3>$operations[$operation]</h3>
#set $table = $TableView("type", "name")
#for $member in $members
$table.add($member['type'], $member['name'], 
           id=$member['id'], groupid=$group.id, operation=$operation)
#end for
$MemberTableTemplate().sorted_table($table, $headers, $url("blapp=%s"), $url("blupp=%s"))
<input type="submit" value="Remember checked" />
<input type="submit" value="Remove checked" />
<input type="submit" value="Check all" />
<input type="submit" value="Uncheck all" />
</div>
#end def


#def groupInfo(group)
<div class="info">
<dl>
    <dt>$_("Name")</dt>
    <dd>$group.get_name()</dd>

#if $group.get_id()
    <dt>$_("Gid")</dt>
    <dd>$group.get_id()</dd>
#end if

    <dt>$_("Description")</dt>
    <dd>$group.get_description()</dd>

##if $group.get_expire_date()
##set $expire_date=$group.get_expire_date().Format("%Y-%m-%d")
##    <dt>$_("Expire")</dt>
##    <dd>$group.get_expire_date().get_date()</dd>
##end if

##set $spreads=', '.join($group.spreads)    
##if $spreads
##    <dt>$_("Spreads")</dt>
##    <dd>$spreads</dd>
##end if

</dl>
</div>
#end def


#def add_member(group)
<div class="add_member">
    Add a member (.. to be inserted by template user)
</div>
#end def

