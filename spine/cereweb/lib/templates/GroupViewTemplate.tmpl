## Copyright 2004, 2005 University of Oslo, Norway
##
## This file is part of Cerebrum.
##
## Cerebrum is free software; you can redistribute it and/or modify it
## under the terms of the GNU General Public License as published by
## the Free Software Foundation; either version 2 of the License, or
## (at your option) any later version.
##
## Cerebrum is distributed in the hope that it will be useful, but
## WITHOUT ANY WARRANTY; without even the implied warranty of
## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
## General Public License for more details.
##
## You should have received a copy of the GNU General Public License
## along with Cerebrum; if not, write to the Free Software Foundation,
## Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307, USA.

#extends EntityViewTemplate
#from lib.utils import object_link, strftime, html_quote, remember_link
#from FormWidgets import FormWidgets
#from Widgets import Widgets
#from EmailTargetTemplate import EmailTargetTemplate
#attr $widgets = Widgets()

#attr $form_widgets = FormWidgets()
#attr $email_template = EmailTargetTemplate()

#def viewActions($transaction, $group)
    #set $id = $html_quote($group.get_id())
    <ul>
        <li><a href="/group/edit?id=$id">$_("edit info")</a></li>
        <li><a href="/group/delete?id=$id">$_("delete group")</a></li>
        #if $group.is_posix()
        <li><a href="/group/posix_demote?id=$id">$_("demote from posix")</a></li>
        #else
        <li><a href="/group/posix_promote?id=$id">$_("promote to posix")</a></li>
        #end if
        <li><a href="/account/create?owner=$id">$_('create group account')</a> </li>
        <li><a href="/quarantine/add?entity=$id">$_('add quarantine')</a></li>
        <li><a href="/entity/full_historylog?id=$id">$_('view full history log')</a> </li>
        <li>$remember_link($group)</li>
    </ul>
#end def

#def viewContent($transaction, $group)
#set $searcher = $transaction.get_group_member_operation_type_searcher()
#set $ops = [(i.get_name(),i.get_description()) for i in $searcher.search()]
#set $commands=$transaction.get_commands()
    $viewInfo($group)
    $viewQuarantines($group)
    $addNote($group)
    $viewNotes($group)
    $viewMembers($group, $ops)
    #if $commands.has_extention("email")
        $email_template.set($group, $transaction)
        $email_template.view($group, $transaction)
    #end if
    $viewTraits($entity)
    $addSpread($group, $transaction)
    $viewSpreads($group)
    $joinGroup($group, $ops)
    $addMember($group, $ops)
    $derivedMembers($group)
    $viewHistoryLog($group)
#end def

#def viewInfo($group)
#set $info = []
#set $notice = []
$info.append(($_('Name'), $html_quote($group.get_name())))
#if $group.is_expired()
    $notice.append($_("This group has expired."))
#end if
#if $group.is_posix()
    $info.append(($_('Gid'), $html_quote($group.get_posix_gid())))
#end if
$info.append(($_('Created'), $strftime($group.get_create_date())))
$info.append(($_('Expire date'), $strftime($group.get_expire_date())))
$info.append(($_('Visibility'), $html_quote($group.get_visibility().get_description())))
$info.append(($_('Description'), $html_quote($group.get_description())))
$widgets.viewInfo($info, $notice)
#end def

#def addMember($group, $ops)
#set $types = (('account', 'Account'), ('group', 'Group'))
<div class="edit box" style="display:none;">
    <h3>$_('Add member')</h3>
    <form action="add_member" method="post">
        <div class="hidden">
            <input type="hidden" name="id" value="$html_quote($group.get_id())" />
        </div>
        <div class="required">
            $form_widgets.input('name', 'Member name', $klass="ac_account")
        </div>
        <div class="required">
            $form_widgets.generate_loption('type', 'Member type', $types, 'account')
        </div>
        <div class="required">
            $form_widgets.generate_loption('operation', 'Operation', $ops, 'union')
        </div>
        <div class="buttons">
            <input type="submit" value="$_('Add member')" />&nbsp;
            <input type="button" value="$_('Cancel')" class="cancel" />
        </div>
    </form>
</div>
#end def

#def joinGroup($entity, $ops=None, $transaction=None)
    #assert $ops is not None or $transaction is not None
    #if $ops is None
    #set $searcher = $transaction.get_group_member_operation_type_searcher()
    #set $ops = [(i.get_name(),i.get_description()) for i in $searcher.search()]
    #end if
    <div id="joinGroupBox" class="edit box" style="display:none;">
        <h3>$_('Join group')</h3>
        <form action="/group/join_group" method="post">
            <div class="hidden">
                <input type="hidden" name="entity" value="$html_quote($entity.get_id())" />
            </div>
            <div class="required">
                $form_widgets.input('name', 'Group name', $klass="ac_group")
            </div>
            <div class="buttons">
                <input type="submit" value="$_('Join group')" />&nbsp;
                <input type="button" value="$_('Cancel')" class="cancel" />
            </div>
        </form>
    </div>
#end def

#def viewMembers($group, $ops)
#set $members = $group.get_group_members()
#if $members
<div class="list box">
    <h3>$_('Members')</h3>

    ## Split member by operation
    #set $memberSets = {}
    #for $key, $tmp in $ops
        #set $memberSets[$key] = []
    #end for
    #for $member in $members
        #set $op = $member.get_operation().get_name()
        #set $type = $member.get_member_type().get_name()
        $memberSets[$op].append(($type, $member.get_member()))
    #end for

    ## List members
    #for $op, $name in $ops
    #set $op_members = $memberSets[$op]
    #if $op_members
    <h4>$name:</h4>
    <table>
        <tr>
            <th>$_('Type')</th>
            <th>$_('Member')</th>
            <th>$_('Member owner')</th>
            <th>$_('Actions')</th>
        </tr>
        #for $type, $member in $op_members
        <tr>
            <td>
                $html_quote($type.capitalize())
            </td>
            <td>
                $object_link($member)
            </td>
            <td>
                #if $type == 'account'
                $object_link($member.get_owner())
                #else
                &nbsp;
                #end if
            </td>
            <td>
                #set $url=$html_quote("/group/remove_member?groupid=%s&amp;memberid=%s" % ($group.get_id(), $member.get_id()))
                <a href=$url>Remove member</a>
            </td>
        </tr>
        #end for
    </table>
    #end if
    #end for
</div>
#end if
#end def

#def derivedMembers($group)
#set $members = $group.get_members()
#if $members
<div class="list box">
    <h3>$_('Derived members')</h3>
    #for $account in $members
        $object_link($account) 
        &nbsp;
    #end for
</div>
#end if
#end def

## Used by person and account view-templates to display groups an account has.
#def listGroups($account)
    #set $primary_group = ''
    #if $account.is_posix()
        #set $primary_group = $account.get_primary_group().get_name()
    #end if

    #set $direct_groups = $account.get_direct_groups()
    #for $group in $account.get_groups()
        <div class="item">
            #set $group_name = $group.get_name()
            #set $disabled = ""
            #set $header = "Group"
            #if $group not in $direct_groups
                #set $disabled = 'disabled="disabled" '
                #set $header = "Indirect group"
            #elif $group_name == $primary_group
                #set $disabled = 'disabled="disabled" '
            #end if
            
            #set $name = $html_quote("member_%s_%s" % ($account.get_id(), $group.get_id()))
            <input type="checkbox" name="$name" $disabled/>
            <em>$_($header):</em> $html_quote($group_name)
            $object_link($group, "view", _class="action")
            $object_link($group, "edit", "edit", _class="action")
            $remember_link($group, _class="action")
            #if $group_name == $primary_group
                <span class="extra">(primary)</span>
            #end if
            #if $group.is_posix()
                <span class="extra">(posix)</span>
            #end if
        </div>
    #end for
#end def

