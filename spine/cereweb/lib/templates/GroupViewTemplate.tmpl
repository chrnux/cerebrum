## Copyright 2004, 2005 University of Oslo, Norway
##
## This file is part of Cerebrum.
##
## Cerebrum is free software; you can redistribute it and/or modify it
## under the terms of the GNU General Public License as published by
## the Free Software Foundation; either version 2 of the License, or
## (at your option) any later version.
##
## Cerebrum is distributed in the hope that it will be useful, but
## WITHOUT ANY WARRANTY; without even the implied warranty of
## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
## General Public License for more details.
##
## You should have received a copy of the GNU General Public License
## along with Cerebrum; if not, write to the Free Software Foundation,
## Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307, USA.

#extends EntityViewTemplate
#from lib.utils import object_link, strftime, html_quote, remember_link
#from lib.utils import html_quote, url_quote, spine_to_web, web_to_spine
#from lib.utils import from_spine_decode
#from FormWidgets import FormWidgets
#from Widgets import Widgets
#from EmailTargetTemplate import EmailTargetTemplate
#from lib.templates.GroupEditTemplate import GroupEditTemplate
#attr $widgets = Widgets()
#attr $groupTemplate = GroupEditTemplate()
#attr $form_widgets = FormWidgets()
#attr $email_template = EmailTargetTemplate()

#def viewActions($group)
    #set $id = $url_quote($group.get_id())
    <ul>
        <li><a href="/group/delete?id=$id">$_("Delete group")</a></li>
        #if $group.is_posix()
        <li><a href="/group/posix_demote?id=$id">$_("Demote from posix")</a></li>
        #else
        <li><a href="/group/posix_promote?id=$id">$_("Promote to posix")</a></li>
        #end if
        <li><a href="/account/create?owner=$id">$_('Create group account')</a> </li>
        <li><a href="/quarantine/add?entity=$id">$_('Add quarantine')</a></li>
        <li><a href="/entity/full_historylog?id=$id">$_('View full history log')</a> </li>
        <li>$remember_link($group)</li>
    </ul>
#end def

#def viewContent($tr, $group)
#set $commands=$tr.get_commands()
    $groupTemplate.editGroup($group, $tr)
    $viewInfo($group)
    $viewQuarantines($group)
    $addNote($group)
    $viewNotes($group)
    $viewMembers($group)
    #if $commands.has_extention("email")
        $email_template.set($group, $tr)
        $email_template.view($group, $tr)
    #end if
    $viewTraits($entity)
    $addSpread($group, $tr)
    $viewSpreads($group)
    $joinGroup($group)
    $addMember($group)
    ## $derivedMembers($group)
    $viewHistoryLog($group)
#end def

#def viewInfo($group)
#set $info = []
#set $notice = []
$info.append(($_('Name'), $spine_to_web($group.get_name())))
#if $group.is_expired()
    $notice.append($_("This group has expired."))
#end if
#if $group.is_posix()
    $info.append(($_('Gid'), $html_quote($group.get_posix_gid())))
#end if
$info.append(($_('Created'), $html_quote($strftime($group.get_create_date()))))
$info.append(($_('Expire date'), $html_quote($strftime($group.get_expire_date()))))
$info.append(($_('Visibility'), $spine_to_web($group.get_visibility().get_description())))
$info.append(($_('Description'), $spine_to_web($group.get_description())))
$widgets.viewInfo($info, $notice)
#end def

#def addMember($group)
#set $types = (('account', 'Account'), ('group', 'Group'))
<div class="edit box" style="display:none;">
    <h3>$_('Add member')</h3>
    <form action="add_member" method="post">
        <div class="hidden">
            <input type="hidden" name="id" value="$html_quote($group.get_id())" />
        </div>
        <div class="required">
            $form_widgets.input('name', 'Member name', $klass="ac_account")
        </div>
        <div class="required">
            $form_widgets.generate_loption('type', 'Member type', $types, 'account')
        </div>
        <div class="buttons">
            <input type="submit" value="$_('Add member')" />&#x0020;
            <input type="button" value="$_('Cancel')" class="cancel" />
        </div>
    </form>
</div>
#end def

#def viewMembers($group)
#set $members = $group.get_group_members()
$members.sort(lambda x,y: cmp(from_spine_decode(x.get_type().get_name()+x.get_name()), from_spine_decode(y.get_type().get_name()+y.get_name())))

#if $members
<div class="list box">
    <h3>$_('Members')</h3>

    <table>
        <tr>
            <th>$_('Type')</th>
            <th>$_('Member')</th>
            <th>$_('Member owner')</th>
            <th>$_('Actions')</th>
        </tr>
        #for $member in $members
        #set $type=member.get_type().get_name()
        <tr>
            <td>
                $type.capitalize()
            </td>
            <td>
                $object_link($member, text=$spine_to_web($member.get_name()))
            </td>
            <td>
                #if $type.lower() == 'account'
                ## $object_link($member.get_owner(), text=$spine_to_web($get_lastname_firstname($member.get_owner())))
                $object_link($member.get_owner())
                #else
                &#x0020;
                #end if
            </td>
            <td>
                #set $url="/group/remove_member?groupid=%s&amp;memberid=%s" % ($url_quote($group.get_id()), $url_quote($member.get_id()))
                <a href="$url">Remove member</a>
            </td>
        </tr>
        #end for
    </table>
</div>
#end if
#end def

#def derivedMembers($group)
#set $members = $group.get_members()
#if $members
<div class="list box">
    <h3>$_('Derived members')</h3>
    #for $account in $members
        #set $acc_name = $spine_to_web($account.get_name())
        $object_link($account, text=$acc_name) 
        &#x0020;
    #end for
</div>
#end if
#end def

