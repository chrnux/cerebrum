## Copyright 2004, 2005 University of Oslo, Norway
##
## This file is part of Cerebrum.
##
## Cerebrum is free software; you can redistribute it and/or modify it
## under the terms of the GNU General Public License as published by
## the Free Software Foundation; either version 2 of the License, or
## (at your option) any later version.
##
## Cerebrum is distributed in the hope that it will be useful, but
## WITHOUT ANY WARRANTY; without even the implied warranty of
## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
## General Public License for more details.
##
## You should have received a copy of the GNU General Public License
## along with Cerebrum; if not, write to the Free Software Foundation,
## Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307, USA.

#extends EntityViewTemplate
#from Cereweb.TableView import TableView
#from Cereweb.utils import url, object_link
#from Cereweb.WorkList import remember_link
#from MemberTableTemplate import MemberTableTemplate


#def viewGroup($transaction, $group)
<div class="group">
    $groupInfo($group)
    $groupMembers($group)
    $add_member($group)
    $view_entity($group, $transaction)
<div>
#end def


#def groupMembers(group)
    #set $allmembers = $group.get_group_members()
    #if $allmembers
    <div class="members">
        <h2>$_("Members")</h2>
<%
# Split memberships by operation type
memberSets = {}
for member in allmembers:
    operation = member.get_operation().get_name()
    # fetch (and possibly create) a list to contain members
    members = memberSets.setdefault(operation, [])
    members.append(member)
    
## FIXME Dont hardcode operations
for operation in ('union', 'intersection', 'difference'):
    members = memberSets.get(operation)
    if not members:
        # skip empty members
        continue
    write(self.memberList(operation, members, group))
%>

     
$derivedMembers($group)

    </div>
    #end if
#end def


#def memberList($operation, $members, $group)
#set $operations = {'union': $_('Union'), 'intersection': $_('Intersection'), 'difference': $_('Difference')}
#set $headers = {'type': $_("Type"), 'name': $_("Name")}
<div class="memberlist">
<h3>$operations[$operation]</h3>
#set $table = $TableView("type", "name")
#for $member in $members
$table.add($member.get_member_type().get_name(), $object_link($member.get_member()), 
           id=$member.get_member().get_id(), groupid=$group.get_id(), 
           operation=$operation, member=$member.get_member())
#end for
$MemberTableTemplate().sorted_table($table, $headers, $url("blapp=%s"), $url("blupp=%s"))
</div>
#end def

#def derivedMembers($group)
<h3>$_("Derived members")</h3>
<p>
#set members=$group.get_members()
#for $account in $members
    $object_link($account) 
    &nbsp;
#end for
</p>

#end def


#def groupInfo(group)
<div class="viewinfo">
    <div class="subtitle">
        <h3>$_('General groupinfo'):</h3>
    </div>
    <div>
        <div class="info">
            <em>$_("Name"):</em> $group.get_name()
        </div>
        #if $group.is_posix()
            <div class="info">
                <em>$_("Gid"):</em> $group.get_posix_gid()
            </div>
        #end if
        <div class="info">
            #set $created = $group.get_create_date().strftime("%Y-%m-%d")
            <em>$_("Created"):</em> $created
        </div>
        <div class="info">
            #if $group.get_expire_date()
                #set $expire_date = $group.get_expire_date().strftime("%Y-%m-%d")
            #else
                #set $expire_date = '&nbsp;'
            #end if
            <em>$_("Expire date"):</em> $expire_date
        </div>
        <div class="info">
            <em>$_("Visibility"):</em> $group.get_visibility().get_description()
        </div>
        <div class="info">
            <em>$_("Description"):</em> $group.get_description()
        </div>
    </div>
    <div class="actions">
        #set $edit = $url("group/edit?id=%i" % $group.get_id())
        <a href="$edit">$_("Edit")</a>
        #if $group.is_posix()
            #set $posix = $url("group/posix_demote?id=%i" % $group.get_id())
            <a href="$posix">$_("Demote from Posix")</a>
        #else
            #set $posix = $url("group/posix_promote?id=%i" % $group.get_id())
            <a href="$posix">$_("Promote to Posix")</a>
        #end if
        #set $delete = $url("group/delete?id=%i" % $group.get_id())
        <a href="$delete">$_("Remove")</a>
        $remember_link($group)
        #set $create_acc = $url("account/create?owner=%i" % $group.get_id())
        <a href="$create_acc">$_("Create group account")</a>
    </div>
</div>
#end def


#def add_member(group)
<div class="add_member">
    Add a member (.. to be inserted by template user)
</div>
#end def

#def list_groups($account)
    #set $direct_groups = $account.get_direct_groups()
    #for $group in $account.get_groups()
        <div class="group">
            #if $group in $direct_groups
                #set $disabled = ""
                #set $header = "Group"
            #else
                #set $disabled = 'disabled="disabled" '
                #set $header = "Indirect group"
            #end if
            #set $name = "member_%s_%s" % ($account.get_id(), $group.get_id())
            <input type="checkbox" name="$name" $disabled/>
            <em>$_($header):</em> $group.get_name()
            $object_link($group, "view", _class="actions")
            $object_link($group, "edit", "edit", _class="actions")
            $remember_link($group, _class="actions")
        </div>
    #end for
#end def
