## Copyright 2004, 2005 University of Oslo, Norway
##
## This file is part of Cerebrum.
##
## Cerebrum is free software; you can redistribute it and/or modify it
## under the terms of the GNU General Public License as published by
## the Free Software Foundation; either version 2 of the License, or
## (at your option) any later version.
##
## Cerebrum is distributed in the hope that it will be useful, but
## WITHOUT ANY WARRANTY; without even the implied warranty of
## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
## General Public License for more details.
##
## You should have received a copy of the GNU General Public License
## along with Cerebrum; if not, write to the Free Software Foundation,
## Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307, USA.

#extends EntityViewTemplate
#from lib.utils import object_link, html_quote, remember_link, html_quote
#from lib.utils import url_quote, spine_to_web
#from SpineIDL.Errors import NotFoundError
#from Widgets import Widgets
#from lib.templates.OUEditTemplate import OUEditTemplate

#attr $widgets = Widgets()
#attr $viewBirthNo = False
#attr $ouTemplate = OUEditTemplate()

#def viewActions($ou)
    #set $id = $url_quote($ou.get_id())
    <ul>
        ## <li><a href="edit?id=$id">$_("edit info")</a></li>
        <li><a href="delete?id=$id">$_("delete ou")</a></li>
        <li><a href="list_aff_persons?id=$id">$_("list affiliated persons")</a></li>
        <li><a href="/quarantine/add?entity=$id">$_('add quarantine')</a></li>
        <li><a href="/entity/full_historylog?id=$id">$_('view full history log')</a></li>
        <li>$remember_link($ou)</li>
    </ul>
#end def

#def viewContent($tr, $ou)
    $editOU($tr, $ou)
    $viewInfo($ou)
    $viewQuarantines($ou)
    $addNote($ou)
    $viewNotes($ou)
    $viewTraits($entity)
    $viewFamily($tr, $ou)
    $viewContactInfos($ou)
    $viewAddresses($ou)
    $addSpread($ou, $tr)
    $viewSpreads($ou)
    $setExternalId($ou, $tr)
    $viewExternalIds($ou, $viewBirthNo)
    $viewHistoryLog($ou)
    $affiliatedPersons($tr, $ou)
#end def

#def editOU($tr, $ou)
    $ouTemplate.form($tr, $ou)
#end def

## View information about OU.
#def viewInfo($ou)
    #set $info = []
    $info.append(($_('Name'), $spine_to_web($ou.get_name())))
    $info.append(($_('Acronym'), $spine_to_web($ou.get_acronym())))
    $info.append(($_('Short name'), $spine_to_web($ou.get_short_name())))
    $info.append(($_('Display name'), $spine_to_web($ou.get_display_name())))
    $info.append(($_('Sort name'), $spine_to_web($ou.get_sort_name())))
    ## removed after starting import of OUs in UNINETT ABC format.
    ## UNINET ABC does not have stedkode,- only kjerne-id.
    ## $info.append(($_('Stedkode'), $spine_to_web($ou.get_stedkode())))
    $widgets.viewInfo($info)
#end def

#def viewFamily($tr, $ou)
    #set $perspectives = $tr.get_ou_perspective_type_searcher().search()
    <div class="list box">
        <h3>$_('OU Family')</h3>
        #for $perspective in $perspectives
            ## parents
            #try
                #set $parent = $ou.get_parent($perspective)
            #except NotFoundError
                #continue
            #end try
            <h4>$_('Parent in perspective')
	    	$spine_to_web($perspective.get_name())</h4>
            #if $parent
            #set $parent_name = $spine_to_web($parent.get_name())
            <div>$object_link($parent, text=$parent_name)</div>
            #else
            <div>$_('(Root of perspective)')</div>
            #end if

            ## children
            #try
                #set $children = $ou.get_children($perspective)
            #except NotFoundError
                #continue
            #end try
            #if $children
                <h4>$_('Children in perspective')
                    $spine_to_web($perspective.get_name())</h4>
                #for $child in $children
                #set $child_name = $spine_to_web($child.get_name())
                <div>$object_link($child, text=$child_name)</div>
                #end for
            #end if     
        #end for
    </div>
#end def

#def affiliatedPersons($tr, $ou)
    #set $all_affs = $tr.get_person_affiliation_type_searcher().search()
    #set $all_sources = $tr.get_ou_perspective_type_searcher().search()
    #set $sources = []
    #for $source in $all_sources
        #set $source_name = $spine_to_web($source.get_name())
        $sources.append(($source_name, $source_name))
    #end for
    #set $affiliations = [('All','All')]
    #for $aff in $all_affs
        #set $aff_name = $spine_to_web($aff.get_name)
        $affiliations.append(($aff_name, $aff_name))
    #end for
    ## <div class="edit box" style="display:none;">
    <div class="edit box">
        <h3 id="search">$_('Search affiliated persons')</h3>
        <form action="/ou/perform_search" method="post">
            <div class="hidden">
                <input type="hidden" name="id" value="$html_quote($ou.get_id())" />
            </div>
            <div class="required">
                $form_widgets.generate_loption("source", "Perspective", $sources)
            </div>
            <div class="required">
                $form_widgets.generate_loption("affiliation", "Affiliation", $affiliations)
            </div>
            <div class="required">
                <label for="recursive">Recursive search:</label>
                <input type="checkbox" name="recursive" />
            </div>
            <div class="required">
                <label for="withoutssn">Without SSN:</label>
                <input type="checkbox" name="withoutssn" id="withoutssn" />
            </div>
            <div class="buttons">
                <input type="submit" value="$_('Search')" />
                <input type="button" value="$_('Cancel')" class="cancel" />
            </div>
        </form>
    </div>
#end def
