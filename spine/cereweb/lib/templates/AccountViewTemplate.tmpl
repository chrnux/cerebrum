## Copyright 2004, 2005 University of Oslo, Norway
##
## This file is part of Cerebrum.
##
## Cerebrum is free software; you can redistribute it and/or modify it
## under the terms of the GNU General Public License as published by
## the Free Software Foundation; either version 2 of the License, or
## (at your option) any later version.
##
## Cerebrum is distributed in the hope that it will be useful, but
## WITHOUT ANY WARRANTY; without even the implied warranty of
## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
## General Public License for more details.
##
## You should have received a copy of the GNU General Public License
## along with Cerebrum; if not, write to the Free Software Foundation,
## Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307, USA.

#from lib.utils import object_link, strftime, html_quote, url_quote
#from lib.utils import remember_link, spine_to_web
#from lib.utils import get_lastname_firstname
#from GroupViewTemplate import GroupViewTemplate
#from EmailTargetTemplate import EmailTargetTemplate
#from FormWidgets import FormWidgets
#from Widgets import Widgets
#extends GroupViewTemplate

#attr $email_template = EmailTargetTemplate()
#attr $form_widgets = FormWidgets()
#attr $widgets = Widgets()
#attr $listGroups = GroupViewTemplate.listGroups
#attr $joinGroup = GroupViewTemplate.joinGroup

#def viewActions($transaction, $account)
    #set $id = $url_quote($account.get_id())
    <ul>
        <li><a href="/account/edit?id=$id">$_("edit info")</a></li>
        <li><a href="/confirm/account/delete?id=$id">$_("delete account")</a></li>
        #if $account.is_posix()
        <li><a href="posix_demote?id=$id">$_("demote from posix")</a></li>
        #else
        <li><a href="posix_promote?id=$id">$_("promote to posix")</a></li>
        #end if
        ##<li><a href="/email/make_target?entity=$id&amp;targettype=account">$_('add email target')</a></li>
        <li><a href="/quarantine/add?entity=$id">$_('add quarantine')</a></li>
        <li><a href="/entity/full_historylog?id=$id">$_('view full history log')</a> </li>
        <li>$remember_link($account)</li>
    </ul>
#end def

## Main method for creating the view of accounts.
#def content()
#set $commands = $tr.get_commands()
    $viewInfo($entity, $tr)
    $printDialog($entity, $tr)
    $viewQuarantines($entity, $tr)
    $addNote($entity)
    $viewNotes($entity, $tr)
    $viewGroups($entity)
    ## $joinGroup($entity, transaction=$tr)
    $joinGroup($entity)
    $viewAffiliation($entity, $tr)
    $addAffiliation($entity, $tr)
    #if $commands.has_extention("email")
        $email_template.set($entity, $tr)
        $email_template.view($entity, $tr)
    #end if
##     $setPassword($entity)
    $viewPasswords($entity, $tr)
    $viewTraits($entity, $tr)
    $setHomeDirectory($entity, $tr)
    $viewHomeDirectories($entity, $tr)
    $addSpread($entity, $tr)
    $viewSpreads($entity, $tr)
    $viewHistoryLog($entity)
#end def

#def viewInfo($account, $tr)
#set $info = []
#set $notice = []
#if $account.is_quarantined()
    $notice.append($_("This account has been quaranteened"))
#end if
#if $account.is_expired()
    $notice.append($_("This account has expired."))
#end if

$info.append(($_('Name'), $spine_to_web($tr, $account.get_name())))
#set $linkText = $spine_to_web($tr, $get_lastname_firstname($account.get_owner()))
$info.append(($_('Owned by'), $object_link($account.get_owner(),text=$linkText)))

$info.append(($_('Expire date'), $html_quote($strftime($account.get_expire_date()))))
$info.append(($_('Date created'), $html_quote($strftime($account.get_create_date()))))
#set $created_by = $spine_to_web($tr, $account.get_creator().get_name())
$info.append(($_('Created by'), $object_link($account.get_creator(), text=$created_by)))
#if $account.is_posix()
    $info.append(($_('UID'), $html_quote($account.get_posix_uid())))
    #set $group_name = $spine_to_web($tr, $account.get_primary_group().get_name())
    $info.append(($_('Primary group'), $object_link($account.get_primary_group(), text=$group_name)))
    $info.append(($_('Gecos'), $spine_to_web($tr, $account.get_gecos())))
    $info.append(($_('Shell'), $spine_to_web($tr, account.get_shell().get_name())))
#end if
$info.append(($_('Description'), $spine_to_web($tr, $account.get_description())))
$widgets.viewInfo($info, $notice)
#end def

#def printDialog($account, $tr)
#set $langs= [ ('no', 'Norwegian'),('en', 'English')]
<div class="edit box">
    <h3>$_('Print contract')</h3>
        <form action="print_contract" method="post">
            <input type="hidden" name="id" value="$html_quote($account.get_id())" />
            <div>
                $form_widgets.generate_loption("lang", "Language", $langs)
            </div>
            <div class="buttons">
            <input type="submit" value="$_('Print')" />
            <input type="button" value="$_('Cancel')" class="cancel" />
            </div>
        </form>
</div>
#end def

#def viewPasswords($account, $tr)
#set $auths = $account.get_authentications()
#if $auths
<div class="info box">
    <h3>$_('Current authentication types')</h3>
    #for $auth in $auths
    <div class="item">
        $spine_to_web($tr, $auth.get_method().get_name())
    </div>
    #end for
</div>
#end if
#end def

#def setPassword($account)
<div class="edit box">
    <h3>$_('Set Password')</h3>
    $form_widgets.changePassword($html_quote($account.get_id()))
</div>
#end def

#def viewGroups($account)
<div class="info box">
    <h3>$_('Groups')</h3>
    <form action="groups" method="post">
        $listGroups($account)
        <div>
        <input type="hidden" name="account_id" value="$html_quote($account.get_id())" />
        #if not $account.get_groups()
        $_('Account is not member of any groups')<br />
        #else
        <input type="submit" name="leave" value="$_('Leave group(s)')" />&#x0020;
        #end if
        <input type="submit" name="create" value="$_('Create a group')" />
        <a href="#joinGroupBox">Join existing group</a>
        </div>
    </form>
</div>
#end def

#def viewAffiliation($account, $tr)
#set $affils = $account.get_affiliations()
#if $affils
<div class="info box">
    <h3>$_('Affiliations')</h3>
    <table>
    <tr class="headers">
    <th>$_('Affiliation')</th>
    <th>$_('OU')</th>
    <th>$_('Priority')</th>
    <th>$_('Actions')</th>
    </tr>
    #for $affil in $account.get_affiliations()
        #set $ou = $affil.get_ou()
        #set $ou_link_text = $spine_to_web($tr, $ou.get_name())
        #set $affil_type = $affil.get_affiliation()
        #set $priority = $affil.get_priority()
        #set $affil_type_name = $spine_to_web($tr, $affil_type.get_name())
        <tr class="item">
        <td>$affil_type_name</td>
        <td>$object_link($ou, text=$ou_link_text)</td>
        <td>$spine_to_web($tr, $priority)</td>
        <td class="actions">
        #set $args = "id=%s&amp;ou=%s&amp;affil=%s" % (
            $url_quote($account.get_id()),
            $url_quote($ou.get_id()),
            $url_quote($affil_type_name))
        <a class="action" href="/confirm/account/remove_affil?$args">$_('delete')</a>
        </td>
        </tr>
    #end for
    </table>
</div>
#end if
#end def

#def addAffiliation($account, $tr)
#set $owner = $account.get_owner()
#if $owner and $owner.get_type() == $tr.get_entity_type("person")
#set $searcher = $tr.get_person_affiliation_searcher()
#set $foo = $searcher.set_person($owner)
#set $affs = $searcher.search()

#set $aff_list = []
#for $i in $affs
   #set $aff_name = $spine_to_web($tr, $i.get_affiliation().get_name())
   #set $ou_id = $html_quote($i.get_ou().get_id())
   #set $ou_name = $spine_to_web($tr, $i.get_ou().get_name())
   $aff_list.append(($aff_name + ":" + $ou_id, $aff_name + ":" + $ou_name))
#end for

## #set $aff_list = [ ("%s:%d" % ($i.get_affiliation().get_name(), $i.get_ou().get_id()), 
## "%s: %s" % ($i.get_affiliation().get_name(), $i.get_ou().get_name())) for $i in $affs ]

<div class="edit box" style="display:none;">
    <h3 id="affil">$_('Add an affiliation')</h3>
    <form action="add_affil" method="post">
        <div class="hidden">
            <input type="hidden" name="id" value="$html_quote($account.get_id())" />
        </div>
        <div class="required">
            $form_widgets.generate_loption("aff_ou", "Affiliation", $aff_list)
        </div>
        <div class="required">
            $form_widgets.input("priority", "Priority")
        </div>
        <div class="buttons">
            <input type="submit" value="$_('Add')" />
            <input type="button" value="$_('Cancel')" class="cancel" />
        </div>
    </form>
    </div>
#end if
#end def

#def viewHomeDirectories($account, $tr)
    #set $homes = $account.get_homes()
    #if $homes
        #set $id = $account.get_id()
        <div class="info box">
            <h3>$_('Home Directories')</h3>
            #for $home in $homes
            <div class="item">
                #set $spread = $home.get_spread()
                #set $sname = $spread.get_name()
                #set $remove = 'remove_home?id=%s&amp;spread=%s' % ($url_quote($id), $url_quote($sname))
		#set $homedir = $home.get_homedir()         
                
                <div class="actions">
                    <a class="action" href="$remove">$_('remove')</a>
                </div>
                <span class="name">$_("Spread"):</span> <span class="value">$spine_to_web($tr, $sname)</span><br />
		#set $disk = $homedir.get_disk()
		#if $disk
                <span class="name">$_("Disk"):</span> <span class="value">"%s:%s" % ($spine_to_web($tr, $disk.get_host().get_name()), $spine_to_web($tr, $disk.get_path()))</span><br />
		#end if
                <span class="name">$_("Home directory"):</span> <span class="value">$spine_to_web($tr, $account.get_homepath($spread))</span><br />
                <span class="name">$_("Status"):</span> <span class="value">$spine_to_web($tr, $homedir.get_status().get_description())</span>
            </div>
            #end for
        </div>
    #end if
#end def

#def setHomeDirectory($entity, $tr)
    #set $spreads = [($i.get_name(), $i.get_name()) for $i in $entity.get_spreads()]
    #set $disks = $tr.get_disk_searcher().search()
    #set $disks = [($i.get_id(), "%s:%s" % ($i.get_host().get_name(), $i.get_path())) for $i in $disks]
            
    <div class="edit box" style="display:none;">
        <h3>$_('Set home directory')</h3>
        <form action="set_home" method="post">
            <div class="hidden">
                <input type="hidden" name="id" value="$html_quote($entity.get_id())" />
            </div>
            <div class="required">
                $form_widgets.generate_loption("spread", "Spread", $spreads, $id="set_spread")
            </div>
            <div class="required">
                $form_widgets.input("home", "Home")
            </div>
            <div class="required">
                $form_widgets.generate_loption("disk", "Disk", $disks)
            </div>
            <div class="buttons">
                <input type="submit" value="$_('Set homedir')" />&#x0020;
                <input type="button" value="$_('Cancel')" class="cancel" />
            </div>
        </form>
    </div>
#end def
