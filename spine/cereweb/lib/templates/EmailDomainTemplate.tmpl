## Copyright 2005 University of Oslo, Norway
##
## This file is part of Cerebrum.
##
## Cerebrum is free software; you can redistribute it and/or modify it
## under the terms of the GNU General Public License as published by
## the Free Software Foundation; either version 2 of the License, or
## (at your option) any later version.
##
## Cerebrum is distributed in the hope that it will be useful, but
## WITHOUT ANY WARRANTY; without even the implied warranty of
## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
## General Public License for more details.
##
## You should have received a copy of the GNU General Public License
## along with Cerebrum; if not, write to the Free Software Foundation,
## Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307, USA.

#from lib.utils import object_link
#from lib.WorkList import remember_link
#from lib.InitTemplate import InitTemplate
#extends InitTemplate

#from Widgets import Widgets
#from FormWidgets import FormWidgets
#attr $form_widgets = FormWidgets()
#attr $widgets = Widgets()

## Max addresses to view in emaildomain/view
#attr $max_addresses = 20

#def _create($tr)
    #set $cats = $tr.get_email_domain_category_searcher().search()
    #set $cats = [('',''),] + [(i.get_name(), i.get_description()) for i in $cats]
        <div class="required">
            $form_widgets.input('name', 'Domain name',value="")
        </div>
        <div class="required">
            $form_widgets.input('description', 'Description',value="")
        </div>
        <div class="required">
            $form_widgets.generate_loption("category", "Category", $cats)
        </div>
#end def

#def create_box($tr)
<div class="create">
<h3>$_("Create a new email domain:")</h3>
    <form action="/email/make" method="post">
        #echo $_create($tr)
        <div class="buttons">
            <input type="submit" value="$_('Create')" />
            <input type="reset" value="$_('Clear')" />
        </div>
    </form>
</div>
#end def

#def create($tr)
<div class="create">
    <h3>$_('Create a new email domain:')</h3>
    <form action="/email/make" method="post">
        #echo $_create($tr)
        <div class="buttons">
            <input type="submit" value="$_('Create')" />
            <input type="reset" value="$_('Clear')" />
        </div>
    </form>
</div>
#end def

#def search_box($tr)
<div class="search">
    <h3>$_('Find email domain:')</h3>
    <form method="post" action="/email/search">
        #echo $_search($tr, {})
        <div class="buttons">
            <input type="submit" value="$_('Search')" />
            <input type="reset" value="$_('Clear')" />
        </div>
    </form>
</div>
#end def

#def search($tr, $vargs)
<div class="search">
    <h3>$_("Search for email domain(s):")</h3>
    <form method="post" action="/email/search">
        #echo $_search($tr, $vargs)
        #set $help = ["Use wildcards * and ? to extend the search.", "Supply several search parameters to limit the search."]
        $form_widgets.showHelp($help)
        <div class="buttons">
            <input type="submit" value="$_('Search')" />
            <input type="reset" value="$_('Clear')" />
        </div>
    </form>
</div>
#end def

#def _search($tr, $vargs)
    #set $cats = $tr.get_email_domain_category_searcher().search()
    #set $cats = [('',''),] + [(i.get_name(), i.get_description()) for i in $cats]
    <div class="required">
        $form_widgets.input("name", "Name", $vargs.get('name', ''))
    </div>
    <div class="required">
       $form_widgets.input("description", "Description", $vargs.get('description', ''))
    </div>
    <div class="required">
        $form_widgets.generate_loption("category", "Category", $cats, $vargs.get('category',''))
    </div>
#end def

#def categories($tr)
#set $cats = $tr.get_email_domain_category_searcher().search()
<table>
	<tr>
		<td>
			&nbsp;
		</td>
	</tr>
    	#for $cat in $cats
	<tr>
		<td>
       			<div>
			$cat.get_name() - $cat.get_description()
			</div>
		</td>
	</tr>
    	#end for
</table>
<br />
<br />
<br />
<br />
#end def

#def view_domain($transaction, $domain)
#set $id = $domain.get_id()
<div class="view_content">

    ## Actions
    <div class="view_actions">
        <h4>$_('Actions')</h4>
        <div class="actions">
            <a href="edit?id=$id">$_('edit info')</a><br />
            <a href="delete?id=$id">$_('delete domain')</a><br />
            <a href="#cats" id="cats_add">$_('add to category')</a><br />
            <a href="addresses?id=$id">$_('list adresses')</a><br />
            $remember_link($domain)<br />
        </div>
    </div>

    ## Content
    #set $info = []
    $info.append(($_("Domain name:"), $domain.get_name()))
    $info.append(($_("Description:"), $domain.get_description()))
    $widgets.viewInfo($info)

    $addCategory($transaction, $domain)
    $viewCategories($domain)
    
    $list_addresses($transaction, $domain, $max_addresses)

    ## Register divs and links to flip visibility.
    <script type="text/javascript">
        FV_register('cats_form', 'cats_add', null, 'cats_cancel');
    </script>
</div>
#end def

#def addCategory($transaction, $domain)
<div class="form box" id="cats_form" style="display:none;">
    <form action="add_to_category" method="post">
        <h3 id="cats">$_('Add to category')</h3>
        <div>
            <input type="hidden" name="id" value="$domain.get_id()" />
            #set $categories = $transaction.get_email_domain_category_searcher()
            $form_widgets.code_selector("category", "Category", $categories)
            <input type="submit" value="$_('Add')" />&nbsp;
            <input type="button" value="$_('Cancel')" id="cats_cancel" />
        </div>
    </form>
</div>
#end def

#def viewCategories($domain)
#set $cats = $domain.get_categories()
#if $cats
    <div class="passwords">
        <h3>$_("Categories")</h3>
        #for $category in $cats
        <div>
            $object_link($category)
            $object_link($domain, method="remove_from_category", 
            text=$_("Remove from category"), _class="action",
            category=$category.get_name())
        </div>
        #end for
    </div>
#end if
#end def

## List email addresses (targets) in domain
#def list_addresses($transaction, $domain, $limit="unlimited")
<div class="list box">
    <h3>$_('Addresses in domain')</h3>
    #set $addrs = $transaction.get_email_address_searcher()
    $addrs.set_domain($domain)
    #for $count,$address in $enumerate($addrs.search())
        #if $count+1 > $limit
            <div class="item">
                (..)
            </div>
            <div class="item">
                $object_link($domain, $_("View all addresses"), 
                    "addresses", _class="action")
            </div>
            #break
        #end if
        <div class="item">
            $object_link($address.get_target(), $address.full_address())
        </div>
    #end for
</div>
<div class="help">
    $_("To add new addresses to the domain, create a new email target. "
       "For instance, find an account and create a new email target "
       "attached to the account.")
</div>
#end def

#def edit_domain($domain)
<div class="edit">
    <h3>$_('Edit domain ' + $domain.get_name())</h3>
    <form action="save" method="post">
        <div class="hidden">
            <input type="hidden" name="id" value="$domain.get_id()" />
        </div>
        <div class="required">
            $form_widgets.input('name', 'Domain name', $domain.get_name())
        </div>
        <div class="required">
            $form_widgets.input('description', 'Description', $domain.get_description())
        </div>
        <div class="buttons">
            <input type="submit" value="$_('Save')" name="submit" />
            <input type="submit" value="$_('Cancel')" name="submit" />
        </div>
    </form>
</div>
#end def

