## Copyright 2004, 2005 University of Oslo, Norway
##
## This file is part of Cerebrum.
##
## Cerebrum is free software; you can redistribute it and/or modify it
## under the terms of the GNU General Public License as published by
## the Free Software Foundation; either version 2 of the License, or
## (at your option) any later version.
##
## Cerebrum is distributed in the hope that it will be useful, but
## WITHOUT ANY WARRANTY; without even the implied warranty of
## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
## General Public License for more details.
##
## You should have received a copy of the GNU General Public License
## along with Cerebrum; if not, write to the Free Software Foundation,
## Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307, USA.

#from lib.utils import html_quote, spine_to_web
#from types import StringTypes
#from lib.InitTemplate import InitTemplate
#from SpineIDL.Errors import NotFoundError
#extends InitTemplate

#from FormWidgets import FormWidgets
#attr $form_widgets = FormWidgets()

## Lines with info about the form, used with the function showHelp().
#attr $help = []

## Creates the form for editing the main person info.
#def form($ou, $trees)
    <h3>$_('Edit general organization info')</h3>
    <div>
    <form action="save" method="post">
        <div class="hidden">
            <input type="hidden" name="id" value="$html_quote($ou.id)" />
        </div>
        <div class="required">
            $form_widgets.input("name", "Name", $spine_to_web($ou.name))
        </div>
        <div class="required">
            $form_widgets.input("acronym", "Acronym", $spine_to_web($ou.acronym))
        </div>
        <div class="required">
            $form_widgets.input("short_name", "Short name", $spine_to_web($ou.short_name))
        </div>
        <div class="required">
            $form_widgets.input("display_name", "Display name", $spine_to_web($ou.display_name))
        </div>
        <div class="required">
            $form_widgets.input("sort_name", "Sort name", $spine_to_web($ou.sort_name))
        </div>
        <div class="required">
            $form_widgets.input("contrycode", "Country code", $html_quote($ou.landkode))
        </div>
        <div class="required">
            $form_widgets.input("institution", "Institution", $html_quote($ou.institusjon))
        </div>
        <div class="required">
            $form_widgets.input("faculty", "Faculty", $html_quote($ou.fakultet))
        </div>
        <div class="required">
            $form_widgets.input("institute", "Institute", $html_quote($ou.institutt))
        </div>
        <div class="required">
            $form_widgets.input("department", "Department", $html_quote($ou.avdeling))
        </div>
        $edit_perspectives($ou, $trees)
        $form_widgets.showHelp($help)
        <div class="buttons">
            <input type="submit" value="$_('Add')" />
            <input type="button" value="$_('Cancel')" class="cancel" />
        </div>
    </form>
    </div>
#end def

#def edit_perspectives($ou, $trees)
    <h3>$_('OU perspectives')</h3>
    #for $perspective, $family in $ou.families.items()
       $select_ou($perspective, $family, $ou, $trees)
    #end for
#end def

#def select_ou($perspective, $family, $ou, $trees)
    ## Internal recursive function for printing an OU options
    #def write_ou_option($value, $label, $selected, $disabled, $indent="")
        #set $attribs = ""
        #if $selected == $value
            #set $attribs += " selected='selected'"
        #end if
        #if $disabled == $value
            #set $attribs += " disabled='disabled'"
        #end if
        <option$attribs value="$html_quote($value)">
            $indent $spine_to_web($label)
        </option>
    #end def

    ## Internal recursive function for printing an OU options
    ## and all it's children
    #def ou_options($ou, $perspective, $selected=None, $disabled=None, $indent="")
        $write_ou_option($ou.id, $ou.name, $selected, $disabled, $indent)
        #for $child in $ou.children
            #if $disabled == $ou.id
                ## All kids are disabled too
                #set $dis = $child.id
            #else
                #set $dis = $disabled
            #end if
            $ou_options($child, $perspective, $selected, $dis, $indent+"--")
        #end for
    #end def

    #if not $family.in_perspective
        #set $selected="not_in"
    #elif $family.is_root
        #set $selected="root"
    #else
        #set $selected=$family.parent.id
    #end if

    <div class="required">

        #set $name = "parent_" + $perspective.name
        <label for="$name">
            #echo $_("Parent in %s:") % $perspective.name
        </label>
        <select name="$name">

        ## First the extra options
        $write_ou_option("not_in", $_("(Not in perspective)"), $selected, disabled=$ou.id)
        $write_ou_option("root", $_("(Root node)"), $selected, disabled=$ou.id)

        ## Then recurse all roots
        #for $root in $trees[$perspective.id]
            $ou_options($root, $perspective, $selected, disabled=$ou.id)
        #end for
        </select>
    </div>
#end def

