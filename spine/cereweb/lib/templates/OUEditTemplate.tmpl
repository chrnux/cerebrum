## Copyright 2004, 2005 University of Oslo, Norway
##
## This file is part of Cerebrum.
##
## Cerebrum is free software; you can redistribute it and/or modify it
## under the terms of the GNU General Public License as published by
## the Free Software Foundation; either version 2 of the License, or
## (at your option) any later version.
##
## Cerebrum is distributed in the hope that it will be useful, but
## WITHOUT ANY WARRANTY; without even the implied warranty of
## MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
## General Public License for more details.
##
## You should have received a copy of the GNU General Public License
## along with Cerebrum; if not, write to the Free Software Foundation,
## Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307, USA.

#from types import StringTypes
#from lib.InitTemplate import InitTemplate
#from SpineIDL.Errors import NotFoundError
#extends InitTemplate

#from FormWidgets import FormWidgets
#attr $form_widgets = FormWidgets()

## Lines with info about the form, used with the function showHelp().
#attr $help = []

## Creates the form for editing the main person info.
#def form($transaction, $ou)
<div class="edit">
    <h3>$_('General organization info')</h3>
    <form action="save" method="post">
        <div class="editform">
            $form_widgets.input("name", "Name", $ou.get_name())
            $form_widgets.input("acronym", "Acronym", $ou.get_acronym())
            $form_widgets.input("short_name", "Short name", $ou.get_short_name())
            $form_widgets.input("display_name", "Display name", $ou.get_display_name())
            $form_widgets.input("sort_name", "Sort name", $ou.get_sort_name())
            $form_widgets.input("contrycode", "Country code", $ou.get_landkode())
            $form_widgets.input("institution", "Institution", $ou.get_institusjon())
            $form_widgets.input("faculty", "Faculty", $ou.get_fakultet())
            $form_widgets.input("institute", "Institute", $ou.get_institutt())
            $form_widgets.input("department", "Department", $ou.get_avdeling())
            $form_widgets.boolWidget("catalogue_mark", "Catalogue mark",
                                     $ou.get_katalog_merke())
            <input type="hidden" name="id" value="$ou.get_id()" />
        </div>
        $edit_perspectives($transaction, $ou)
        $form_widgets.showHelp($help)
        <div>
            <center>
                <input type="submit" value="$_('Save')" name="submit" />&nbsp;
                <input type="submit" value="$_('Cancel')" name="submit" />
            </center>
        </div>
    </form>
</div>
#end def

#def edit_perspectives($transaction, $ou)
        <h3>$_('OU perspectives')</h3>
        #set $extras = [ ("not_in", $_("(Not in perspective)")),
                         ("root", $_("(Root node)")) ]
        #set $perspectives = $transaction.get_ou_perspective_type_searcher()
        #for $perspective in $perspectives.search()
            #try
                #set $parent=$ou.get_parent($perspective)    
            #except NotFoundError
                #set $parent="not_in"
            #else
                #if $parent is None
                    #set $parent="root"
                #end if
            #end try    
            
            $select_ou($perspective, "parent_" + $perspective.get_name(),
                       $_("Parent in %s:") % $perspective.get_name(),
                       $parent, $ou, $extras) 
        #end for
#end def

## Displays a select box for choosing an
## OU in a given perspective.
## --selected  ou_id or OU instance of current selection
## --disabled  ou_id or OU instance of OU to be disabled 
##             (Note that all this OUs children will also 
##             be disabled)
## --extras    List of tuples of constant choices to be
##             appended at the top of the list. For 
##             instance:
##              [ ("not_in", "Not in perspective"),
##                ("root", "Root node") ]
##             The first part of the tuple is the value for
##             the <option>, while the last part is the 
##             displayed text for the option

#def select_ou($perspective, $name, $label=None, $selected=None,
               $disabled=None, 
               $extras=())
    
    #if $selected is not None and not isinstance($selected, StringTypes):
        #set $selected = $selected.get_id()
    #end if
    #if $disabled is not None and not isinstance($disabled, StringTypes):
        #set $disabled = $disabled.get_id()
    #end if

    ## Internal recursive function for printing an OU options
    ## and all it's children

    #def ou_options($ou, $perspective, $indent="", $selected=None, $disable=None)
        #set $name=$ou.get_id()
        #set $descr=$ou.get_name()
        #set $attribs=''
        #if $selected==$name
            #set $attribs += " selected='selected'"
        #end if    
        #if $disable==$name
            #set $attribs += " disabled='disabled'"
        #end if
        <option$attribs value="$name">
            $indent $descr
        </option>
        #for $child in $ou.get_children($perspective)
            #if $disable==$name
                ## All kids are disabled too
                #set dis=$child.get_id()
            #else
                #set dis=$disable
            #end if
            $ou_options($child, $perspective, $indent+"--", $selected, $dis)
        #end for
        
    #end def
    #if $label
        <label for="$name">
            $label
        </label>
    #end if
    <select name="$name">

    ## First the extra options
    #for $name,$descr in $extras
        #set attribs=''
        #if $selected==$name
            #set $attribs += " selected='selected'"
        #end if    
        #if $disabled==$name
            #set $attribs += " disabled='disabled'"
        #end if
        <option$attribs value="$name">
            $descr
        </option>
    #end for
    
    ## Then recurse all roots
    #for $root in $perspective.get_roots()
        $ou_options($root, $perspective, selected=$selected, disable=$disabled)
    #end for
    </select>
    #if $label
        <br />
    #end if    
#end def

