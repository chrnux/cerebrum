============================================================
The ePhorte WebService
============================================================

The ePhorte WebService interface is documented in `ePhorte - oppd. av
brukerinfo. <http://www.admin.uio.no/prosjekter/esak/prosjekt/avrop/gecko/ephorte-teknisk/samlet.pdf>`_.
The document is somewhat brief.  This document tries to clarify parts
of the documentation.

Note that this document is not authoritative in any way.  The
information is partly from experimentation, partly from talks with
ergo.

Unfortunately, the API is not very helpful when it comes to error
messages.  For example, a ``Failed to enable constraints...`` message
is an indication that something is wrong with your XML.  It may for
instance indicate that you have a ``PE_ID`` tag, but not a
``SEEKFIELDS`` tag inside your ``PERSON`` tag when updating a person.
Other times, the update methods returns 0 (they should return an ID),
indicating that your XML was for some reason more or less ignored.
You are not notified of illegal tags.

If you access ePhorte on
https://ephorte.foo.bar/site/Shared/Webservices/Services.asmx from
localhost, you can access the test-forms shown in the above mentioned
pdf.  This allows for fairly easy testing of your XML-strings by
submitting them in a form rather than going through the normal
WebServices interface.

updatePersonByXML
======================

This method allways needs a ``<PERSON>`` tag.  For existing records,
``PE_ID`` must be specified.  It has to be unique through the XML
file, but can have any value.  If other tags in the file, such as
``PERROLLE`` references it (the FK is named ``PR_PEID_PE``), the same
value must be used.  To tell ePhorte to look up the correct person,
the ``SEEKFIELDS`` and ``SEEKVALUES`` tags must be used inside the
``PERSON`` tag.

To delete an existing entry, the ``DELETERECORD`` tag must contain the
value ``1``.  ``SEEKFIELDS`` and ``SEEKVALUES`` must be used to
identify the record to remove.  In the example below, a role of type 4
is removed for the person with ``PE_ID`` =80::

  <?xml version="1.0" standalone="yes"?>
  <PersonData>
  <PERSON>
  <PE_ID>1</PE_ID>
  <SEEKFIELDS>PE_ID</SEEKFIELDS>
  <SEEKVALUES>80</SEEKVALUES>
  </PERSON>
  <PERROLLE>
  <PR_ID>1</PR_ID>
  <PR_PEID_PE>1</PR_PEID_PE>
  <SEEKFIELDS>PR_PEID_PE;PR_ROLLEID_RO</SEEKFIELDS>
  <SEEKVALUES>80;4</SEEKVALUES>
  <DELETERECORD>1</DELETERECORD>
  </PERROLLE>
  </PersonData>

If the ``SEEK*`` tags are not present, ePhorte will insert the
specified record.  It is also possible to insert a record if it does
not already exist, by appending ``(+)`` to the ``SEEKVALUES``.  The
syntax is something like this (the Ergo consultant couldn't get it to
work)::

  <?xml version="1.0" standalone="yes"?>
  <PersonData>
  <PERSON>
  <PE_ID>1</PE_ID>
  <SEEKFIELDS>PE_ID</SEEKFIELDS>
  <SEEKVALUES>75</SEEKVALUES>
  </PERSON>
  <PERROLLE>
  <PR_ID>1</PR_ID>
  <PR_PEID_PE>1</PR_PEID_PE>
  <PR_ROLLEID_RO>1</PR_ROLLEID_RO>
  <PR_STDROLLE>-1</PR_STDROLLE>
  <PR_JENHET_JE>J-UIO</PR_JENHET_JE>
  <PR_ADMID_AI>137</PR_ADMID_AI>
  <PR_ARKDEL_AD>AVTALE UIO</PR_ARKDEL_AD>
  <PR_FRADATO>2007-05-21</PR_FRADATO>
  <SEEKFIELDS>PR_PEID_PE;PR_ROLLEID_RO</SEEKFIELDS>
  <SEEKVALUES>75;1(+)</SEEKVALUES>
  </PERROLLE>
  </PersonData>


According to Ergo, it is possible to update several persons with one
call, but we have not tried this.

Examples
-----------

Add a rolle::

  <?xml version="1.0" standalone="yes"?>
  <PersonData>
    <PERSON>
      <PE_ID>1</PE_ID>
      <SEEKFIELDS>PE_ID</SEEKFIELDS>
      <SEEKVALUES>75</SEEKVALUES>
    </PERSON>
    <PERROLLE>
      <PR_ID>1</PR_ID>
      <PR_PEID_PE>1</PR_PEID_PE>
      <PR_ROLLEID_RO>2</PR_ROLLEID_RO>
      <PR_STDROLLE>-1</PR_STDROLLE>
      <PR_JENHET_JE>J-UIO</PR_JENHET_JE>
      <PR_ADMID_AI>137</PR_ADMID_AI>
      <PR_ARKDEL_AD>AVTALE UIO</PR_ARKDEL_AD>
      <PR_FRADATO>2007-05-21</PR_FRADATO>
      <PR_TITTEL>En test</PR_TITTEL>
    </PERROLLE>
  </PersonData>

Remove a rolle from db::

  <?xml version="1.0" standalone="yes"?>
  <PersonData>
    <PERSON>
      <PE_ID>1</PE_ID>
      <SEEKFIELDS>PE_ID</SEEKFIELDS>
      <SEEKVALUES>80</SEEKVALUES>
    </PERSON>
    <PERROLLE>
      <PR_ID>1</PR_ID>
      <PR_PEID_PE>1</PR_PEID_PE>
      <SEEKFIELDS>PR_PEID_PE;PR_ROLLEID_RO</SEEKFIELDS>
      <SEEKVALUES>80;4</SEEKVALUES>
      <DELETERECORD>1</DELETERECORD>
    </PERROLLE>
  </PersonData>

PS! That code acually removes the rolle row from the PERROLLE table.
This is not the way roles should be deleted. The way to to it is to
set the PR_TILDATO. This code below do that.

Delete a rolle (the correct way)::

  <?xml version="1.0" standalone="yes"?>
  <PersonData>
    <PERSON>
      <PE_ID>1</PE_ID>
      <SEEKFIELDS>PE_ID</SEEKFIELDS>
      <SEEKVALUES>80</SEEKVALUES>
    </PERSON>
    <PERROLLE>
      <PR_ID>1</PR_ID>
      <PR_PEID_PE>1</PR_PEID_PE>
      <SEEKFIELDS>PR_PEID_PE;PR_ROLLEID_RO</SEEKFIELDS>
      <SEEKVALUES>80;4</SEEKVALUES>
      <PR_TILDATO>2008-02-10</PR_TILDATO>
    </PERROLLE>
  </PersonData>


Add two roller (note increased PR_ID)::

  <?xml version="1.0" standalone="yes"?>
  <PersonData>
    <PERSON>
      <PE_ID>1</PE_ID>
      <SEEKFIELDS>PE_ID</SEEKFIELDS>
      <SEEKVALUES>75</SEEKVALUES>
    </PERSON>
    <PERROLLE>
      <PR_ID>1</PR_ID>
      <PR_PEID_PE>1</PR_PEID_PE>
      <PR_ROLLEID_RO>5</PR_ROLLEID_RO>
      <PR_STDROLLE>-1</PR_STDROLLE>
      <PR_JENHET_JE>J-UIO</PR_JENHET_JE>
      <PR_ADMID_AI>137</PR_ADMID_AI>
      <PR_ARKDEL_AD>AVTALE UIO</PR_ARKDEL_AD>
      <PR_FRADATO>2007-05-21</PR_FRADATO>
      <PR_TITTEL>En test</PR_TITTEL>
    </PERROLLE>
    <PERROLLE>
      <PR_ID>2</PR_ID>
      <PR_PEID_PE>1</PR_PEID_PE>
      <PR_ROLLEID_RO>6</PR_ROLLEID_RO>
      <PR_STDROLLE>-1</PR_STDROLLE>
      <PR_JENHET_JE>J-UIO</PR_JENHET_JE>
      <PR_ADMID_AI>137</PR_ADMID_AI>
      <PR_ARKDEL_AD>AVTALE UIO</PR_ARKDEL_AD>
      <PR_FRADATO>2007-05-21</PR_FRADATO>
      <PR_TITTEL>En test</PR_TITTEL>
    </PERROLLE>
  </PersonData>


Add a pertgkode (permission) in db::


<?xml version="1.0" standalone="yes"?>
<PersonData>
  <PERSON>
    <PE_ID>85</PE_ID>
    <SEEKFIELDS>PE_ID</SEEKFIELDS>
    <SEEKVALUES>85</SEEKVALUES>
  </PERSON>
  <PERTGKODE>
    <PT_PEID_PE>85</PT_PEID_PE>
    <PT_TGKODE_TK>P</PT_TGKODE_TK>
    <PT_ADMID_AI>11</PT_ADMID_AI>
    <PT_AUTAV_PE>4663</PT_AUTAV_PE>
    <PT_FRADATO>2008-02-08</PT_FRADATO>
    <PT_AUTOPPHAV_PE>0</PT_AUTOPPHAV_PE>
  </PERTGKODE>
</PersonData>


Delete a pertgkode in db::

<?xml version="1.0" standalone="yes"?>
<PersonData>
  <PERSON>
    <PE_ID>85</PE_ID>
    <SEEKFIELDS>PE_ID</SEEKFIELDS>
    <SEEKVALUES>85</SEEKVALUES>
  </PERSON>
  <PERTGKODE>
    <PT_PEID_PE>85</PT_PEID_PE>
    <PT_TGKODE_TK>P</PT_TGKODE_TK>
    <PT_ADMID_AI>11</PT_ADMID_AI>
    <SEEKFIELDS>PT_PEID_PE;PT_TGKODE_TK;PT_ADMID_AI</SEEKFIELDS>
    <SEEKVALUES>85;P;11</SEEKVALUES>
    <PT_TILDATO>2008-02-10</PT_TILDATO>
  </PERTGKODE>
</PersonData>




updateByXML
======================

An example of usage is shown below (however the Ergo consultant
couldn't get it to work)::

  <?xml version="1.0" standalone="yes"?>
  <XML2Ephorte>
  <PERROLLE>
  <PR_ID>1</PR_ID>
  <PR_PEID_PE>1</PR_PEID_PE>
  <PR_ROLLEID_RO>1</PR_ROLLEID_RO>
  <PR_STDROLLE>-1</PR_STDROLLE>
  <PR_JENHET_JE>J-UIO</PR_JENHET_JE>
  <PR_ADMID_AI>137</PR_ADMID_AI>
  <PR_ARKDEL_AD>AVTALE UIO</PR_ARKDEL_AD>
  <PR_FRADATO>2007-05-21</PR_FRADATO>
  <SEEKFIELDS>PR_PEID_PE;PR_ROLLEID_RO</SEEKFIELDS>
  <SEEKVALUES>75;1(+)</SEEKVALUES>
  </PERROLLE>
  </XML2Ephorte>

GetDataSet
=============
CriteriaCollectionString settes f.eks til "object=adrperson" for å
hente innholdet i tabellen adrperson.

For en del tabeller vil resultatet bli trunkert ved at det inneholder
<PartialResult>true</PartialResult>, samt en tag som forteller hvilken
rad som var siste.  Ved å legge på f.eks ";MaxRecords=30000" i
CriteriaCollectionString kan man få ut flere rader, men det finnes en
setting AbsoluteMaxRecords som likevel kan skape problemer.  Da kan
man legge på ";StartRowIndex=NNN" for å starte fra en gitt rad i
"oppfølgings-søket".


