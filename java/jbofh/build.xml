<?xml version="1.0" encoding="UTF-8"?>
<project basedir="." default="dist" name="JBofh">
    <description>
        Buildfile for JBofh.  Use -Dnogui if swing is not available, example:
        JAVACMD=/usr/lib/kaffe/bin/kaffe ant -Dbuild.compiler=kjc -Dnogui dist
        JAVACMD=/local/j2sdk1.4/bin/java ant dist
    </description>
  <!-- set global properties for this build -->
  <property location="src" name="src"/>
  <property location="build" name="build"/>
  <property location="dist" name="dist"/>
  <property location="tmpdist" name="tmp"/>

  <target name="init">
    <!-- Create the time stamp -->
    <tstamp/>
    <!-- Create the build directory structure used by compile -->
    <mkdir dir="${build}"/>
  </target>

  <target depends="init" description="compile the source " name="compile" unless="${nogui}">
    <!-- Compile the java code from ${src} into ${build} -->
    <echo>Compiling with gui </echo>
    <javac destdir="${build}" srcdir="${src}" debug="on">
            <classpath>
                <fileset dir="lib" includes="*.jar">
                </fileset>
            </classpath>
        </javac>
  </target>

  <target depends="init" description="compile the source" name="compile-nogui" if="${nogui}">
    <!-- Compile the java code from ${src} into ${build} -->
    <echo>Compiling without gui </echo>
    <javac destdir="${build}" srcdir="${src}" debug="on">
            <classpath>
                <fileset dir="lib" includes="*.jar">
                </fileset>
            </classpath>
            <exclude name="no/uio/jbofh/JBofhFrameImpl.java"/>
        </javac>
  </target>

  <target depends="compile,compile-nogui" description="generate the distribution" name="dist">
    <!-- Create the distribution directory -->
    <mkdir dir="${dist}/lib"/>
    <unzip src="lib/log4jME.jar" dest="${tmp}"/>
    <unzip src="lib/JavaPrintf.jar" dest="${tmp}"/>
    <unzip src="lib/xp.jar" dest="${tmp}"/>
    <unzip src="lib/libreadline-java.jar" dest="${tmp}"/>
    <unzip src="lib/xmlrpc-1.1.jar" dest="${tmp}"/>
    <!-- Put everything in ${build} into the JBofh-${DSTAMP}.jar file -->
    <exec dir="${basedir}" failonerror="on" executable="python" output="version.txt">
      <arg value="${basedir}/../../Cerebrum/__init__.py"/>
    </exec>
    <jar basedir="${build}" jarfile="${dist}/lib/JBofh.jar">
      <fileset dir="${tmp}">
        <include name="**/*.class"/>
      </fileset>
      <fileset dir="${basedir}">
        <include name="*.properties"/>
        <include name="cacert.pem"/>
        <include name="version.txt"/>
      </fileset>
      <manifest>
        <attribute name="Main-Class" value="no.uio.jbofh.JBofh"/>
      </manifest>
    </jar>
  </target>

  <target description="clean up" name="clean">
    <!-- Delete the ${build} and ${dist} directory trees -->
    <delete dir="${build}"/>
    <delete dir="${dist}"/>
    <delete dir="${tmp}"/>
    <delete file="version.txt"/>
  </target>
</project>
