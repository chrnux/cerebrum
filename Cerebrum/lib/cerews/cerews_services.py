################################################## 
# cerews_services.py 
# generated by ZSI.generate.wsdl2python
##################################################


from cerews_services_types import *
import urlparse, types
from ZSI.TCcompound import ComplexType, Struct
from ZSI import client
import ZSI

# Locator
class cerewsLocator:
    cerewsPortType_address = "https://bas.ntnu.no:8666/"
    def getcerewsPortTypeAddress(self):
        return cerewsLocator.cerewsPortType_address
    def getcerewsPortType(self, url=None, **kw):
        return cerewsBindingSOAP(url or cerewsLocator.cerewsPortType_address, **kw)

# Methods
class cerewsBindingSOAP:
    def __init__(self, url, endPointReference=None, **kw):
        kw.setdefault("readerclass", None)
        kw.setdefault("writerclass", None)
        # no resource properties
        self.binding = client.Binding(url=url, **kw)
        self.endPointReference = endPointReference

    # op: get_accounts
    def get_accounts(self, request):
        if isinstance(request, getAccountsRequest) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        kw = {}
        wsaction = "http://bas.ntnu.no/spinews.wsdl/cerewsPortType/getAccountsRequest"
        self.binding.Send(None, None, request, soapaction="", wsaction=wsaction, endPointReference=self.endPointReference, **kw)
        wsaction = "http://bas.ntnu.no/spinews.wsdl/cerewsPortType/getAccountsResponse"
        response = self.binding.Receive(getAccountsResponse.typecode, wsaction=wsaction)
        return response

    # op: get_persons
    def get_persons(self, request):
        if isinstance(request, getPersonsRequest) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        kw = {}
        wsaction = "http://bas.ntnu.no/spinews.wsdl/cerewsPortType/getPersonsRequest"
        self.binding.Send(None, None, request, soapaction="", wsaction=wsaction, endPointReference=self.endPointReference, **kw)
        wsaction = "http://bas.ntnu.no/spinews.wsdl/cerewsPortType/getPersonsResponse"
        response = self.binding.Receive(getPersonsResponse.typecode, wsaction=wsaction)
        return response

    # op: get_groups
    def get_groups(self, request):
        if isinstance(request, getGroupsRequest) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        kw = {}
        wsaction = "http://bas.ntnu.no/spinews.wsdl/cerewsPortType/getGroupsRequest"
        self.binding.Send(None, None, request, soapaction="", wsaction=wsaction, endPointReference=self.endPointReference, **kw)
        wsaction = "http://bas.ntnu.no/spinews.wsdl/cerewsPortType/getGroupsResponse"
        response = self.binding.Receive(getGroupsResponse.typecode, wsaction=wsaction)
        return response

    # op: get_ous
    def get_ous(self, request):
        if isinstance(request, getOUsRequest) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        kw = {}
        wsaction = "http://bas.ntnu.no/spinews.wsdl/cerewsPortType/getOUsRequest"
        self.binding.Send(None, None, request, soapaction="", wsaction=wsaction, endPointReference=self.endPointReference, **kw)
        wsaction = "http://bas.ntnu.no/spinews.wsdl/cerewsPortType/getOUsResponse"
        response = self.binding.Receive(getOUsResponse.typecode, wsaction=wsaction)
        return response

    # op: get_aliases
    def get_aliases(self, request):
        if isinstance(request, getAliasesRequest) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        kw = {}
        wsaction = "http://bas.ntnu.no/spinews.wsdl/cerewsPortType/getAliasesRequest"
        self.binding.Send(None, None, request, soapaction="", wsaction=wsaction, endPointReference=self.endPointReference, **kw)
        wsaction = "http://bas.ntnu.no/spinews.wsdl/cerewsPortType/getAliasesResponse"
        response = self.binding.Receive(getAliasesResponse.typecode, wsaction=wsaction)
        return response

    # op: get_homedirs
    def get_homedirs(self, request):
        if isinstance(request, getHomedirsRequest) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        kw = {}
        wsaction = "http://bas.ntnu.no/spinews.wsdl/cerewsPortType/getHomedirsRequest"
        self.binding.Send(None, None, request, soapaction="", wsaction=wsaction, endPointReference=self.endPointReference, **kw)
        wsaction = "http://bas.ntnu.no/spinews.wsdl/cerewsPortType/getHomedirsResponse"
        response = self.binding.Receive(getHomedirsResponse.typecode, wsaction=wsaction)
        return response

    # op: set_homedir_status
    def set_homedir_status(self, request):
        if isinstance(request, setHomedirStatusRequest) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        kw = {}
        wsaction = "http://bas.ntnu.no/spinews.wsdl/cerewsPortType/setHomedirStatusRequest"
        self.binding.Send(None, None, request, soapaction="", wsaction=wsaction, endPointReference=self.endPointReference, **kw)
        wsaction = "http://bas.ntnu.no/spinews.wsdl/cerewsPortType/setHomedirStatusResponse"
        response = self.binding.Receive(setHomedirStatusResponse.typecode, wsaction=wsaction)
        return setHomedirStatusResponse(response)

    # op: get_changelogid
    def get_changelogid(self, request):
        if isinstance(request, getChangelogidRequest) is False:
            raise TypeError, "%s incorrect request type" % (request.__class__)
        kw = {}
        wsaction = "http://bas.ntnu.no/spinews.wsdl/cerewsPortType/getChangelogidRequest"
        self.binding.Send(None, None, request, soapaction="", wsaction=wsaction, endPointReference=self.endPointReference, **kw)
        wsaction = "http://bas.ntnu.no/spinews.wsdl/cerewsPortType/getChangelogidResponse"
        response = self.binding.Receive(getChangelogidResponse.typecode, wsaction=wsaction)
        return getChangelogidResponse(response)

getAccountsRequest = ns0.getAccountsRequest_Dec().pyclass

getAccountsResponse = ns0.getAccountsResponse_Dec().pyclass

getPersonsRequest = ns0.getPersonsRequest_Dec().pyclass

getPersonsResponse = ns0.getPersonsResponse_Dec().pyclass

getGroupsRequest = ns0.getGroupsRequest_Dec().pyclass

getGroupsResponse = ns0.getGroupsResponse_Dec().pyclass

getOUsRequest = ns0.getOUsRequest_Dec().pyclass

getOUsResponse = ns0.getOUsResponse_Dec().pyclass

getAliasesRequest = ns0.getAliasesRequest_Dec().pyclass

getAliasesResponse = ns0.getAliasesResponse_Dec().pyclass

getHomedirsRequest = ns0.getHomedirsRequest_Dec().pyclass

getHomedirsResponse = ns0.getHomedirsResponse_Dec().pyclass

setHomedirStatusRequest = ns0.setHomedirStatusRequest_Dec().pyclass

setHomedirStatusResponse = ns0.setHomedirStatusResponse_Dec().pyclass

getChangelogidRequest = ns0.getChangelogidRequest_Dec().pyclass

getChangelogidResponse = ns0.getChangelogidResponse_Dec().pyclass
